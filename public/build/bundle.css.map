{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Map.svelte",
    "MapTooltip.svelte",
    "AboutCard.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Footer.svelte",
    "Header.svelte",
    "LogoHeader.svelte",
    "Media.svelte",
    "Scroller.svelte",
    "About.svelte",
    "Home.svelte",
    "Arrow.svelte",
    "Em.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount, setContext } from \"svelte\";\n\timport mapbox from \"./lib/mapbox-gl@1.13.2\";\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n\texport let map;\n\texport let id = \"map\";\n\texport let location = {\n\t\tlng: 15,\n\t\tlat: 45,\n\t\tzoom: 1\n\t};\n\texport let style = {\n\t\t\"version\": 8,\n\t\t\"sources\": {},\n\t\t\"layers\": []\n\t};\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\texport let controls = false;\n\texport let locate = false;\n\texport let tabbable = false;\n\n\texport let zoom = null;\n\texport let center = null;\n\texport let interactive = true;\n\n\tlet container;\n\tlet w;\n\tlet h;\n\tlet options;\n\tlet loaded = false;\n\n\tsetContext(\"map\", {\n\t\tgetMap: () => map,\n\t});\n\t\n\t// Interpret location\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (typeof location.lng == 'number' && typeof location.lat == 'number') {\n\t\toptions = {\n\t\t\tcenter: [location.lng, location.lat],\n\t\t};\n\t\tif (typeof location.zoom == 'number') {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconst link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://unpkg.com/mapbox-gl@1.13.2/dist/mapbox-gl.css\";\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle,\n\t\t\t\tminZoom: minzoom,\n\t\t\t\tmaxZoom: maxzoom,\n\t\t\t\tinteractive,\n\t\t\t\t...options,\n\t\t\t});\n\t\t\t\n\t\t\tif (controls) {\n\t\t\t\tmap.addControl(new mapbox.NavigationControl({showCompass: false}));\n\t\t\t}\n\t\t\t\n\t\t\tif (locate) {\n\t\t\t\tmap.addControl(new mapbox.GeolocateControl());\n\t\t\t}\n\t\t\t\n\t\t\t// Get initial zoom level\n\t\t\tmap.on(\"load\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t\tloaded = true;\n\t\t\t\t\n\t\t\t\t// Prevent map from being tabbable\n\t\t\t\tif (!tabbable && document.querySelector(`#${id} canvas`)) {\n\t\t\t\t\tdocument.querySelector(`#${id} canvas`).tabIndex = \"-1\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Update zoom level and center when the view changes\n\t\t\tmap.on(\"moveend\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t});\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n\n\t// Function that forces map to resize to fit parent div, in case it doesn't automatically\n\tfunction resizeCanvas() {\n\t\tif (loaded) {\n\t\t\tlet canvas = document.getElementsByClassName(\"mapboxgl-canvas\");\n\t\t  if (canvas[0]) {\n\t\t\t  canvas[0].style.width = \"100%\";\n\t\t\t  canvas[0].style.height = \"100%\";\n\t\t\t  map.resize();\n\t\t  }\n\t\t}\n\t}\n\n\t// Invoke above function when parent div size changes\n\t$: (w || h) && resizeCanvas();\n</script>\n\n<div bind:clientWidth={w} bind:clientHeight={h} bind:this={container} {id}>\n\t{#if loaded}\n\t\t<slot />\n\t{/if}\n</div>\n\n<style>\n\t:global(.mapboxgl-control-container button) {\n\t\tmargin: 0;\n\t}\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>",
    "<script>\n  import { getContext } from 'svelte';\n  import mapbox from './lib/mapbox-gl@1.13.2';\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n  export let content;\n\n  const tooltip = new mapbox.Popup({\n\t\tcloseButton: false,\n\t\tcloseOnClick: false\n\t});\n\n  const { getMap } = getContext('map');\n\tconst map = getMap();\n  const hoverObj = getContext('hover');\n\n  function updateTooltip(obj, content) {\n    if (obj.id) {\n      tooltip\n\t\t\t.setLngLat(obj.event.lngLat)\n      .setHTML(content ? content : obj.code)\n      .addTo(map);\n    } else {\n      tooltip.remove();\n    }\n  }\n\n  $: updateTooltip($hoverObj, content);\n</script>\n\n<style>\n  :global(.mapboxgl-popup-content) {\n\t\tpadding: 5px 10px !important;\n\t}\n</style>",
    "<!-- AboutCard.svelte -->\n\n<script>\n    export let imageUrl;\n    export let name;\n    export let description;\n  </script>\n  \n  <style>\n    .card {\n      width: 250px;\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: 16px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      text-align: center;\n      margin: 32px;\n    }\n  \n    .image {\n      max-width: 100%;\n      border-radius: 50%;\n      margin-bottom: 12px;\n    }\n  \n    .name {\n      font-size: 1em;\n      font-weight: bold;\n      margin-bottom: 8px;\n    }\n  \n    .description {\n      font-size: 0.8em;\n\n      color: #555;\n    }\n  </style>\n\n  \n  <div class=\"card\">\n    {#if imageUrl}\n      <img src={imageUrl} alt=\"Profile\" class=\"image\" />\n    {/if}\n    {#if name}\n      <p class=\"name\">{name}</p>\n    {/if}\n    {#if description}\n      <p class=\"description\">{description}</p>\n    {/if}\n  </div>",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "\t<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\timport { link } from \"svelte-routing\";\n\timport About from '../routes/About.svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"/\" use:link>\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/favicon.png\"\n\t\t\t\talt=\"Team 7\" />\n\n\t\t</a>\n\t\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"/aboutus\" use:link style=\"color: {themes[theme]['text']}\">About us</a></li>\n\t\t\t<li><a href=\"/\"  use:link style=\"color: {themes[theme]['text']}\">Something Else?</a></li>\n\n\t\t</ul>\n\t</div>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<!-- <div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">Open Government Licence v3.0</a>, \n\t\t\texcept where otherwise stated\n\t\t</div> -->\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a.link {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a.link:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a.link:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n  export let bgimage = null;\n  export let bgcolor = null;\n  export let bgfixed = false;\n  export let center = true;\n  export let short = false;\n\n  let style = '';\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`;\n  } else {\n    style += 'background-image: none;';\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;';\n  }\n</script>\n\n<style>\n  .short {\n    min-height: 60vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n\n<header style=\"color: {themes[theme]['text']}; background-color: {bgcolor ? bgcolor : themes[theme]['background']}; {style}\" class:short>\n\t<div class=\"v-padded col-wide middle\" style=\"position: relative\" class:short class:height-full={!short}>\n\t\t<div class:center>\n\t\t\t<slot></slot>\n    </div>\n\t</div>\n</header>",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\timport {link } from \"svelte-routing\";\n\n\n\texport let theme = getContext('theme');\n\texport let filled = false;\n\texport let center = true;\n</script>\n\n<nav style=\"border-bottom-color: {themes[theme]['muted']}; {filled ? 'background-color: ' +  themes[theme]['background'] + ';' : ''}\">\n  <div class=\"col-wide middle\" class:center>\n\t\t<!-- <a href=\"/\" use:link>\n\t\t\t<picture>\n\t\t\t\t<img src=\"./img/favicon.png\" alt=\"Team 7\">\n\n\t\t\t</picture>\n\t\t</a> -->\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 46px;\n\t\tmargin-bottom: -46px;\n\t\tborder-bottom: 1px solid #777;\n\t\tz-index: 1;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: -3px;\n\t\tpadding: 0 5px;\n\t}\n\timg {\n\t\twidth: 150px;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = grid ? ` grid-${grid}` : '';\n\n\tlet nogrid = !(\"grid-gap\" in document.body.style);\n\t\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: 1fr repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px 1fr);`\n\t\t\t\t: `-ms-grid-rows: 1fr; grid-template-rows: 1fr;`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row}; min-height: ${rowHeight};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach(fn => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t});\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n  let bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: (top, bottom, threshold, parallax, update());\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${fixed ? 'fixed' : 'absolute'}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\r\n      bgContainer.style.cssText = style;\r\n    }\r\n  }\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? (foreground_height - background_height)\r\n\t\t\t\t: (foreground_height - available_space);\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      }\r\n\t\t} else {\r\n\t\t\toffset_top = parallax ?\r\n\t\t\t\tMath.round(top_px - progress * (background_height - available_space)) :\r\n\t\t\t\ttop_px;\r\n      if (!fixed) {\r\n        fixed = true;\r\n        setFixed();\r\n      }\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh}/>\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container class='background-container' bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>",
    "<!-- App.svelte -->\n\n<script>\n    import AboutCard from '../layout/AboutCard.svelte';\n  \n    const cards = [\n      { imageUrl: './img/avatar/1.png', name: 'Shady Mansour', description: 'Passionate software developer with a love for creating innovative solutions.' },\n      { imageUrl: './img/avatar/12.png', name: 'Raphael Wennmacher', description: 'Experienced graphic designer with a keen eye for detail and aesthetics.'},\n      { imageUrl: './img/avatar/82.png', name: 'Fiona Lau', description: 'Adventurous traveler exploring the world and sharing stories through photography.' },\n      { imageUrl: './img/avatar/85.png', name: 'Elena Herzog', description: 'Dedicated fitness enthusiast promoting a healthy lifestyle and wellness.' },\n      { imageUrl: './img/avatar/44.png', name: 'Paul Walter', description: 'Passionate musician spreading joy through soulful melodies and rhythms.' },\n    ];\n  </script>\n  \n  <style>\n    .card-container {\n      display: flex;\n      justify-content: space-between;\n    }\n  </style>\n\n<h1> About Us</h1>\n\n  \n  <div class=\"card-container\">\n    {#each cards as { imageUrl, name, description, index } }\n      <AboutCard {imageUrl} {name} {description} key={index} />\n    {/each}\n  </div>\n ",
    "\n<script>\n\t// CORE IMPORTS\n\timport { setContext, onMount } from \"svelte\";\n\timport { getMotion } from \"../utils.js\";\n\timport { themes } from \"../config.js\";\n\timport LogoHeader from \"../layout/LogoHeader.svelte\";\n\timport Footer from \"../layout/Footer.svelte\";\n\timport Header from \"../layout/Header.svelte\";\n\timport Section from \"../layout/Section.svelte\";\n\timport Media from \"../layout/Media.svelte\";\n\timport Scroller from \"../layout/Scroller.svelte\";\n\timport Filler from \"../layout/Filler.svelte\";\n\timport Divider from \"../layout/Divider.svelte\";\n\timport Arrow from \"../ui/Arrow.svelte\";\n\timport Em from \"../ui/Em.svelte\";\n\n\n\t// DEMO-SPECIFIC IMPORTS\n\timport bbox from \"@turf/bbox\";\n\timport { getData, setColors, getTopo, getBreaks, getColor } from \"../utils.js\";\n\timport { colors, units } from \"../config.js\";\n\t// import { ScatterChart, LineChart, BarChart } from \"@onsvisual/svelte-charts\";\n\timport { Map, MapSource, MapLayer, MapTooltip } from \"@onsvisual/svelte-maps\";\n\n\t// CORE CONFIG (COLOUR THEMES)\n\t// Set theme globally (options are 'light', 'dark' or 'lightblue')\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// CONFIG FOR SCROLLER COMPONENTS\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet animation = getMotion(); // Set animation preference depending on browser preference\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\tonMount(() => {\n\t\tidPrev = {...id};\n\t});\n\n\t// Constants\n\tconst topojson = \"./data/1_sehr_hoch_topo.json\";\n\t\n\t// Data\n\tlet data = {region: {}};\n\tlet metadata = {region: {}};\n\tlet geojson;\n\tconst mapbounds =[\n\t\t\t[-3, 47.26985931396479 ],\n\t\t\t[ 15.03811264038086, 55.05652618408226 ]\n\t\t] \n\n\t// Element bindings\n\tlet map = null; // Bound to mapbox 'map' instance once initialised\n\n\t// State\n\tlet hovered; // Hovered district (chart or map)\n\tlet selected; // Selected district (chart or map)\n\tlet mapHighlighted = []; // Highlighted district (map only)\n\tlet mapKey = \"density\"; // Key for data to be displayed on map\n\tlet explore = false; // Allows chart/map interactivity to be toggled on/off\n\n\t// FUNCTIONS (INCL. SCROLLER ACTIONS)\n\n\t// Functions for chart and map on:select and on:hover events\n\tfunction doSelect(e) {\n\t\tconsole.log(e);\n\t\tselected = e.detail.id;\n\t\tif (e.detail.feature) fitById(selected); // Fit map if select event comes from map\n\t}\n\tfunction doHover(e) {\n\t\thovered = e.detail.id;\n\t}\n\n\t// Functions for map component\n\tfunction fitBounds(bounds) {\n\t\tif (map) {\n\t\t\tmap.fitBounds(bounds, {animate: animation, padding: 30});\n\t\t}\n\t}\n\tfunction fitById(id) {\n\t\tif (geojson && id) {\n\t\t\tlet feature = geojson.features.find(d => d.properties.AREACD == id);\n\t\t\tlet bounds = bbox(feature.geometry);\n\t\t\tfitBounds(bounds);\n\t\t}\n\t}\n\n\t// Actions for Scroller components\n\tconst actions = {\n\t\tmap: { // Actions for <Scroller/> with id=\"map\"\n\t\t\tmap01: () => { // Action for <section/> with data-id=\"map01\"\n\t\t\t\tfitBounds(mapbounds);\n\t\t\t\tmapKey = \"density\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap02: () => {\n\t\t\t\tfitBounds(mapbounds);\n\t\t\t\tmapKey = \"age_med\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap03: () => {\n\t\t\t\tlet hl = [...data.region.indicators].sort((a, b) => b.age_med - a.age_med)[0];\n\t\t\t\tfitById(hl.code);\n\t\t\t\tmapKey = \"age_med\";\n\t\t\t\tmapHighlighted = [hl.code];\n\t\t\t\texplore = false;\n\t\t\t},\n\t\t\tmap04: () => {\n\t\t\t\tfitBounds(mapbounds);\n\t\t\t\tmapKey = \"age_med\";\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = true;\n\t\t\t}\n\t\t}// ,\n\t\t// chart: {\n\t\t// \tchart01: () => {\n\t\t// \t\txKey = \"area\";\n\t\t// \t\tyKey = null;\n\t\t// \t\tzKey = null;\n\t\t// \t\trKey = null;\n\t\t// \t\texplore = false;\n\t\t// \t},\n\t\t// \tchart02: () => {\n\t\t// \t\txKey = \"area\";\n\t\t// \t\tyKey = null;\n\t\t// \t\tzKey = null;\n\t\t// \t\trKey = \"pop\";\n\t\t// \t\texplore = false;\n\t\t// \t},\n\t\t// \tchart03: () => {\n\t\t// \t\txKey = \"area\";\n\t\t// \t\tyKey = \"density\";\n\t\t// \t\tzKey = null;\n\t\t// \t\trKey = \"pop\";\n\t\t// \t\texplore = false;\n\t\t// \t},\n\t\t// \tchart04: () => {\n\t\t// \t\txKey = \"area\";\n\t\t// \t\tyKey = \"density\";\n\t\t// \t\tzKey = \"parent_name\";\n\t\t// \t\trKey = \"pop\";\n\t\t// \t\texplore = false;\n\t\t// \t},\n\t\t// \tchart05: () => {\n\t\t// \t\txKey = \"area\";\n\t\t// \t\tyKey = \"density\";\n\t\t// \t\tzKey = null;\n\t\t// \t\trKey = \"pop\";\n\t\t// \t\texplore = true;\n\t\t// \t}\n\t\t// }\n\t};\n\n\t// Code to run Scroller actions when new caption IDs come into view\n\tfunction runActions(codes = []) {\n\t\tcodes.forEach(code => {\n\t\t\tif (id[code] != idPrev[code]) {\n\t\t\t\tif (actions[code][id[code]]) {\n\t\t\t\t\tactions[code][id[code]]();\n\t\t\t\t}\n\t\t\t\tidPrev[code] = id[code];\n\t\t\t}\n\t\t});\n\t}\n\t$: id && runActions(Object.keys(actions)); // Run above code when 'id' object changes\n\n\t// INITIALISATION CODE\n\tgetData('./data/data_region.csv')\n    .then(arr => {\n        // Process metadata\n        let meta = arr.map(d => ({\n            code: d.code,\n            name: d.name,\n            parent: d.parent ? d.parent : null\n        }));\n        let lookup = {};\n        meta.forEach(d => {\n            lookup[d.code] = d;\n        });\n        metadata.region.array = meta;\n        metadata.region.lookup = lookup;\n\n        // Process indicators\n        let indicators = arr.map((d, i) => ({\n            ...meta[i],\n            area: d.area,\n            pop: d['2020'],\n            density: d.density,\n            age_med: d.age_med\n        }));\n\n        // Additional processing for region\n        ['density', 'age_med'].forEach(key => {\n            let values = indicators.map(d => d[key]).sort((a, b) => a - b);\n            let breaks = getBreaks(values);\n            indicators.forEach((d, i) => indicators[i][key + '_color'] = getColor(d[key], breaks, colors.seq));\n        });\n        data.region.indicators = indicators;\n\n        // Process timeseries\n        let years = [\n            2001, 2002, 2003, 2004, 2005,\n            2006, 2007, 2008, 2009, 2010,\n            2011, 2012, 2013, 2014, 2015,\n            2016, 2017, 2018, 2019, 2020\n        ];\n\n        let timeseries = [];\n        arr.forEach(d => {\n            years.forEach(year => {\n                timeseries.push({\n                    code: d.code,\n                    name: d.name,\n                    value: d[year],\n                    year\n                });\n            });\n        });\n        data.region.timeseries = timeseries;\n    })\n    .catch(error => {\n        console.error('Error loading or processing data:', error);\n    });\n\n\tgetTopo(topojson, 'states')\n\t.then(geo => {\n\t\tgeo.features.sort((a, b) => a.properties.AREANM.localeCompare(b.properties.AREANM));\n\n\t\tgeojson = geo;\n\t});\n</script>\n <!-- <LogoHeader filled={true} center={false} /> -->\n\n<Header bgcolor=\"#206095\" bgfixed={true} theme=\"dark\" center={false} short={true}>\n\t<h1>Was bewegt Deutschland?</h1>\n\t<p class=\"text-big\" style=\"margin-top: 5px\">\n\t\tInteraktive Datenvisualisierung zur Entwicklung der Infrastruktur in Deutschland.\n\t</p>\n\t<div style=\"margin-top: 90px;\">\n\t\t<Arrow color=\"white\" {animation}>Scroll to begin</Arrow>\n\t</div>\n</Header>\n\n\n<Divider/>\n\n\n\n<Section>\n\t<h2>This is a dynamic map section</h2>\n\t<p class=\"mb\">\n\t\tThe map below will respond to the captions as you scroll down. The scroller is not set to splitscreen, so captions are placed over the map on any screen size.\n\t</p>\n</Section>\n\n{#if geojson && data.region.indicators}\n<Scroller {threshold} bind:id={id['map']}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\">\n\t\t\t\t<Map bind:map interactive={false} location={{bounds: mapbounds}}>\n\t\t\t\t\t<MapSource\n\t\t\t\t\t  id=\"lad\"\n\t\t\t\t\t  type=\"geojson\"\n\t\t\t\t\t  data={geojson}\n\t\t\t\t\t  promoteId=\"AREACD\"\n\t\t\t\t\t  maxzoom={13}>\n\t\t\t\t\t  <MapLayer\n\t\t\t\t\t  \tid=\"lad-fill\"\n\t\t\t\t\t\t\tidKey=\"code\"\n\t\t\t\t\t\t\tcolorKey={mapKey + \"_color\"}\n\t\t\t\t\t  \tdata={data.region.indicators}\n\t\t\t\t\t  \ttype=\"fill\"\n\t\t\t\t\t\t\tselect {selected} on:select={doSelect} clickIgnore={!explore}\n\t\t\t\t\t\t\thover {hovered} on:hover={doHover}\n\t\t\t\t\t\t\thighlight highlighted={mapHighlighted}\n\t\t\t\t\t  \tpaint={{\n\t\t\t\t\t  \t\t'fill-color': ['case',\n\t\t\t\t\t  \t\t\t['!=', ['feature-state', 'color'], null], ['feature-state', 'color'],\n\t\t\t\t\t  \t\t\t'rgba(255, 255, 255, 0)'\n\t\t\t\t\t  \t\t],\n\t\t\t\t\t  \t\t'fill-opacity': 0.7\n\t\t\t\t\t  \t}}>\n\t\t\t\t\t\t\t\t<MapTooltip content={\n\t\t\t\t\t\t\t\t\thovered ? `${metadata.region.lookup[hovered].name}<br/><strong>${data.region.indicators.find(d => d.code == hovered)[mapKey].toLocaleString()} ${units[mapKey]}</strong>` : ''\n\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t</MapLayer>\n\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t  \tid=\"lad-line\"\n\t\t\t\t\t  \ttype=\"line\"\n\t\t\t\t\t  \tpaint={{\n\t\t\t\t\t  \t\t'line-color': ['case',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'hovered'], true], 'orange',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'selected'], true], 'black',\n\t\t\t\t\t  \t\t\t['==', ['feature-state', 'highlighted'], true], 'black',\n\t\t\t\t\t  \t\t\t'rgba(255,255,255,0)'\n\t\t\t\t\t  \t\t],\n\t\t\t\t\t  \t\t'line-width': 2\n\t\t\t\t\t  \t}}\n\t\t\t\t    />\n\t\t\t\t  </MapSource>\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"map01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThis map shows <strong>population density</strong> by region. Regions are coloured from <Em color={colors.seq[0]}>least dense</Em> to <Em color={colors.seq[4]}>most dense</Em>. You can hover to see the region name and density.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tThe map now shows <strong>median age</strong>, from <Em color={colors.seq[0]}>youngest</Em> to <Em color={colors.seq[4]}>oldest</Em>.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<!-- This gets the data object for the region with the oldest median age -->\n\t\t\t\t{#each [[...data.region.indicators].sort((a, b) => b.age_med - a.age_med)[0]] as region}\n\t\t\t\t<p>\n\t\t\t\t\tThe map is now zoomed on <Em color={region.age_med_color}>{region.name}</Em>, the region with the oldest median age, {region.age_med} years.\n\t\t\t\t</p>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Select a region</h3>\n\t\t\t\t<p>Use the selection box below or click on the map to select and zoom to a region.</p>\n\t\t\t\t{#if geojson}\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<!-- svelte-ignore a11y-no-onchange -->\n\t\t\t\t\t\t<select bind:value={selected} on:change={() => fitById(selected)}>\n\t\t\t\t\t\t\t<option value={null}>Select one</option>\n\t\t\t\t\t\t\t{#each geojson.features as place}\n\t\t\t\t\t\t\t\t<option value={place.properties.AREACD}>\n\t\t\t\t\t\t\t\t\t{place.properties.AREANM}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n{/if}\n<Footer />\n\n<style>\n\t/* Styles specific to elements within the demo */\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\t:global(svelte-scroller-foreground section div) {\n\t\tpointer-events: all !important;\n\t}\n\tselect {\n\t\tmax-width: 350px;\n\t}\n\t.chart {\n\t\tmargin-top: 45px;\n\t\twidth: calc(100% - 5px);\n\t}\n\t.chart-full {\n\t\tmargin: 0 20px;\n\t}\n\t.chart-sml {\n\t\tfont-size: 0.85em;\n\t}\n\t/* The properties below make the media DIVs grey, for visual purposes in demo */\n\t.media {\n\t\tbackground-color: #f0f0f0;\n\t\tdisplay: -webkit-box;\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t-webkit-box-orient: vertical;\n\t\t-webkit-box-direction: normal;\n\t\t-ms-flex-flow: column;\n\t\tflex-flow: column;\n\t\t-webkit-box-pack: center;\n\t\t-ms-flex-pack: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tcolor: #aaa;\n\t}\n</style>\n",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}