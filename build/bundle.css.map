{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Map.svelte",
    "MapTooltip.svelte",
    "AboutCard.svelte",
    "AnimatedBarChart.svelte",
    "Footer.svelte",
    "Header.svelte",
    "LineChartRace.svelte",
    "NavIndicator.svelte",
    "Scroller.svelte",
    "About.svelte",
    "Home.svelte",
    "Legend.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount, setContext } from \"svelte\";\n\timport mapbox from \"./lib/mapbox-gl@1.13.2\";\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n\texport let map;\n\texport let id = \"map\";\n\texport let location = {\n\t\tlng: 15,\n\t\tlat: 45,\n\t\tzoom: 1\n\t};\n\texport let style = {\n\t\t\"version\": 8,\n\t\t\"sources\": {},\n\t\t\"layers\": []\n\t};\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\texport let controls = false;\n\texport let locate = false;\n\texport let tabbable = false;\n\n\texport let zoom = null;\n\texport let center = null;\n\texport let interactive = true;\n\n\tlet container;\n\tlet w;\n\tlet h;\n\tlet options;\n\tlet loaded = false;\n\n\tsetContext(\"map\", {\n\t\tgetMap: () => map,\n\t});\n\t\n\t// Interpret location\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (typeof location.lng == 'number' && typeof location.lat == 'number') {\n\t\toptions = {\n\t\t\tcenter: [location.lng, location.lat],\n\t\t};\n\t\tif (typeof location.zoom == 'number') {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconst link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://unpkg.com/mapbox-gl@1.13.2/dist/mapbox-gl.css\";\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle,\n\t\t\t\tminZoom: minzoom,\n\t\t\t\tmaxZoom: maxzoom,\n\t\t\t\tinteractive,\n\t\t\t\t...options,\n\t\t\t});\n\t\t\t\n\t\t\tif (controls) {\n\t\t\t\tmap.addControl(new mapbox.NavigationControl({showCompass: false}));\n\t\t\t}\n\t\t\t\n\t\t\tif (locate) {\n\t\t\t\tmap.addControl(new mapbox.GeolocateControl());\n\t\t\t}\n\t\t\t\n\t\t\t// Get initial zoom level\n\t\t\tmap.on(\"load\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t\tloaded = true;\n\t\t\t\t\n\t\t\t\t// Prevent map from being tabbable\n\t\t\t\tif (!tabbable && document.querySelector(`#${id} canvas`)) {\n\t\t\t\t\tdocument.querySelector(`#${id} canvas`).tabIndex = \"-1\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Update zoom level and center when the view changes\n\t\t\tmap.on(\"moveend\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t\tcenter = map.getCenter();\n\t\t\t});\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n\n\t// Function that forces map to resize to fit parent div, in case it doesn't automatically\n\tfunction resizeCanvas() {\n\t\tif (loaded) {\n\t\t\tlet canvas = document.getElementsByClassName(\"mapboxgl-canvas\");\n\t\t  if (canvas[0]) {\n\t\t\t  canvas[0].style.width = \"100%\";\n\t\t\t  canvas[0].style.height = \"100%\";\n\t\t\t  map.resize();\n\t\t  }\n\t\t}\n\t}\n\n\t// Invoke above function when parent div size changes\n\t$: (w || h) && resizeCanvas();\n</script>\n\n<div bind:clientWidth={w} bind:clientHeight={h} bind:this={container} {id}>\n\t{#if loaded}\n\t\t<slot />\n\t{/if}\n</div>\n\n<style>\n\t:global(.mapboxgl-control-container button) {\n\t\tmargin: 0;\n\t}\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>",
    "<script>\n  import { getContext } from 'svelte';\n  import mapbox from './lib/mapbox-gl@1.13.2';\n\t// Mapbox source code is bundled due to versioning & ES6 import issues\n\t// https://cdn.skypack.dev/-/mapbox-gl@v1.13.2-asizChmwkQobquJNQjgb/dist=es2020,mode=imports,min/optimized/mapbox-gl.js\n\n  export let content;\n\n  const tooltip = new mapbox.Popup({\n\t\tcloseButton: false,\n\t\tcloseOnClick: false\n\t});\n\n  const { getMap } = getContext('map');\n\tconst map = getMap();\n  const hoverObj = getContext('hover');\n\n  function updateTooltip(obj, content) {\n    if (obj.id) {\n      tooltip\n\t\t\t.setLngLat(obj.event.lngLat)\n      .setHTML(content ? content : obj.code)\n      .addTo(map);\n    } else {\n      tooltip.remove();\n    }\n  }\n\n  $: updateTooltip($hoverObj, content);\n</script>\n\n<style>\n  :global(.mapboxgl-popup-content) {\n\t\tpadding: 5px 10px !important;\n\t}\n</style>",
    "<!-- AboutCard.svelte -->\n\n<script>\n\texport let imageUrl;\n\texport let name;\n\texport let description;\n</script>\n\n<div class=\"card\">\n\t{#if imageUrl}\n\t\t<img src={imageUrl} alt=\"Profile\" class=\"image\" />\n\t{/if}\n\t{#if name}\n\t\t<p class=\"name\">{name}</p>\n\t{/if}\n\t{#if description}\n\t\t<p class=\"description\">{description}</p>\n\t{/if}\n</div>\n\n<style>\n\t.card {\n\t\twidth: 250px;\n\t\tborder: 1px solid #ccc;\n\t\tborder-radius: 8px;\n\t\tpadding: 16px;\n\t\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\t\ttext-align: center;\n\t\tmargin: 32px;\n\t}\n\n\t.image {\n\t\tmax-width: 100%;\n\t\tborder-radius: 50%;\n\t\tmargin-bottom: 12px;\n\t}\n\n\t.name {\n\t\tfont-size: 1em;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 8px;\n\t}\n\n\t.description {\n\t\tfont-size: 0.8em;\n\n\t\tcolor: #555;\n\t}\n</style>\n",
    "<svelte:options accessors={true} />\n\n<script>\n\timport { onMount, onDestroy } from 'svelte';\n\timport { themes } from '../config.js';\n\timport * as d3 from 'd3';\n\n\texport let data;\n\texport let height = 300;\n\texport let width = 500;\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let xTicks = 5;\n\texport let animationDuration = 500; // Duration of the animation in milliseconds\n\n\texport let padding = { top: 30, right: 30, bottom: 60, left: 160 };\n\texport let xSuffix = ''; // Suffix for the x-axis values\n\texport let title = ''; // Title at the top of the chart\n\texport let source = ''; // Source text at the bottom of the chart\n\n\tlet svg;\n\tlet chart;\n\tlet resizeObserver;\n\n\tfunction handleResize(entries) {\n\t\tconst entry = entries[0];\n\t\t// width = entry.contentRect.width;\n\t\t// height = entry.contentRect.height;\n\t\tupdateChart();\n\t}\n\n\tonMount(() => {\n\t\tresizeObserver = new ResizeObserver(handleResize);\n\t\tresizeObserver.observe(svg.parentNode);\n\n\t\tinitializeChart();\n\t\tupdateChart();\n\t});\n\n\tonDestroy(() => {\n\t\tif (resizeObserver) {\n\t\t\tresizeObserver.disconnect();\n\t\t}\n\t});\n\n\t$: if (data && chart) {\n\t\tupdateChart();\n\t}\n\n\tfunction initializeChart() {\n\t\td3.select(svg).attr('viewBox', `0 0 500 300`);\n\t\t// Create SVG container\n\t\tchart = d3\n\t\t\t.select(svg)\n\t\t\t// .attr('width', width)\n\t\t\t// .attr('height', height)\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(${padding.left},${padding.top})`);\n\n\t\t// Initial axes setup\n\t\tchart\n\t\t\t.append('g')\n\t\t\t.attr('class', 'x-axis')\n\t\t\t.attr('transform', `translate(0,${height - padding.bottom})`);\n\n\t\tchart.append('g').attr('class', 'y-axis');\n\n\t\tif (data) {\n\t\t\tupdateChart();\n\t\t}\n\t}\n\n\tfunction updateChart() {\n\t\t// Set up dimensions and scales\n\t\tconst innerWidth = width - padding.left - padding.right;\n\t\tconst innerHeight = height - padding.top - padding.bottom;\n\n\t\tconst xMaxValue = d3.max(data, (d) => d[xKey]) + 20;\n\t\tconst xScale = d3.scaleLinear().domain([0, xMaxValue]).range([0, innerWidth]);\n\n\t\tconst yScale = d3\n\t\t\t.scaleBand()\n\t\t\t.domain(data.map((d) => d[yKey]))\n\t\t\t.range([0, innerHeight])\n\t\t\t.padding(0.1);\n\t\t//.attr('class', 'testi')\n\n\t\t// Bind data to groups (bars and labels)\n\t\tconst barGroups = chart\n\t\t\t.selectAll('.bar-group')\n\t\t\t.data(data, (d) => d[yKey])\n\t\t\t.join('g')\n\t\t\t.attr('class', 'bar-group')\n\t\t\t.attr('transform', (d) => `translate(0, ${yScale(d[yKey])})`);\n\n\t\t// Update bars\n\t\tbarGroups\n\t\t\t.selectAll('.bar')\n\t\t\t.data((d) => [d]) // Pass parent data to children\n\t\t\t.join('rect')\n\t\t\t.attr('class', 'bar')\n\t\t\t.transition()\n\t\t\t.duration(animationDuration)\n\t\t\t.attr('x', 0)\n\t\t\t.attr('width', (d) => xScale(d[xKey]))\n\t\t\t.attr('height', yScale.bandwidth())\n\t\t\t.attr('fill', (d) => d.color);\n\n\t\t// Update labels\n\t\tbarGroups\n\t\t\t.selectAll('.label')\n\t\t\t.data((d) => [d]) // Pass parent data to children\n\t\t\t.join('text')\n\t\t\t.style('font-size', '13px')\n\t\t\t.style('fill', themes.neutral.text.primary)\n\t\t\t.style('text-anchor', 'end')\n\t\t\t.attr('class', 'label')\n\t\t\t.transition()\n\t\t\t.duration(animationDuration)\n\t\t\t.attr('x', (d) => xScale(d[xKey]) - 10)\n\t\t\t.attr('y', yScale.bandwidth() / 2)\n\t\t\t.attr('dy', '.35em')\n\t\t\t.text((d) => d[xKey] + xSuffix);\n\n\t\t// Update X and Y axes\n\n\t\tconst xAxis = d3\n\t\t\t.axisBottom(xScale)\n\t\t\t.ticks(xTicks)\n\t\t\t.tickFormat((d) => d + xSuffix);\n\n\t\tchart\n\t\t\t.select('.x-axis')\n\t\t\t.transition()\n\t\t\t.duration(animationDuration)\n\t\t\t.attr('transform', `translate(0,${innerHeight})`)\n\t\t\t.call(xAxis);\n\n\t\tchart\n\t\t\t.select('.y-axis')\n\t\t\t.call(d3.axisLeft(yScale))\n\t\t\t.selectAll('.tick text')\n\t\t\t.call(wrap, padding.left - 20) // Adjust the wrapping width as needed\n\t\t\t.transition()\n\t\t\t.duration(animationDuration);\n\n\t\t// Update or add title\n\t\tlet titleText = chart.selectAll('.chart-title').data([title]);\n\t\ttitleText\n\t\t\t.enter()\n\t\t\t.append('text')\n\t\t\t.attr('class', 'chart-title')\n\t\t\t.merge(titleText)\n\t\t\t.attr('x', 0)\n\t\t\t.attr('y', -padding.top / 2)\n\t\t\t.attr('text-anchor', 'start')\n\t\t\t.style('font-size', '14px')\n\t\t\t.style('font-weight', 'bold')\n\t\t\t.style('fill', themes.neutral['text-dark'].secondary)\n\t\t\t.text(title);\n\n\t\ttitleText.exit().remove();\n\n\t\t// Update or add source\n\t\tlet sourceText = chart.selectAll('.chart-source').data([source]);\n\t\tsourceText\n\t\t\t.enter()\n\t\t\t.append('text')\n\t\t\t.attr('class', 'chart-source')\n\t\t\t.merge(sourceText)\n\t\t\t.attr('x', 0)\n\t\t\t.attr('y', innerHeight + padding.bottom - 20) // Adjust this for positioning\n\t\t\t.attr('text-anchor', 'left')\n\t\t\t.style('font-size', '12px')\n\t\t\t.style('fill', themes.neutral['text-dark'].teritary)\n\t\t\t.text(source);\n\n\t\tsourceText.exit().remove();\n\t}\n\n\tfunction wrap(text, width) {\n\t\ttext.each(function () {\n\t\t\tlet text = d3.select(this),\n\t\t\t\twords = text.text().split(/\\s+/).reverse(),\n\t\t\t\tword,\n\t\t\t\tline = [],\n\t\t\t\tlineNumber = 0,\n\t\t\t\tlineHeight = 1.1, // ems\n\t\t\t\ty = text.attr('y'),\n\t\t\t\tdy = parseFloat(text.attr('dy')),\n\t\t\t\ttspan = text\n\t\t\t\t\t.text(null)\n\t\t\t\t\t.append('tspan')\n\t\t\t\t\t.attr('x', -10)\n\t\t\t\t\t.attr('y', y)\n\t\t\t\t\t.attr('dy', dy + 'em');\n\n\t\t\twhile ((word = words.pop())) {\n\t\t\t\tline.push(word);\n\t\t\t\ttspan.text(line.join(' '));\n\t\t\t\tif (tspan.node().getComputedTextLength() > width) {\n\t\t\t\t\tline.pop();\n\t\t\t\t\ttspan.text(line.join(' '));\n\t\t\t\t\tline = [word];\n\t\t\t\t\ttspan = text\n\t\t\t\t\t\t.append('tspan')\n\t\t\t\t\t\t.attr('x', -10)\n\t\t\t\t\t\t.attr('y', y)\n\t\t\t\t\t\t.attr('dy', ++lineNumber * lineHeight + dy + 'em')\n\t\t\t\t\t\t.text(word);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n</script>\n\n<div>\n\t<svg bind:this={svg}></svg>\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex; /* Enables Flexbox */\n\t\tflex-direction: column; /* Stacks children vertically */\n\t\tjustify-content: center; /* Centers children along the main axis (vertically in this case) */\n\t\talign-items: center; /* Centers children along the cross axis (horizontally) */\n\t\twidth: 100%;\n\t\theight: 90%;\n\t}\n</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { link } from 'svelte-routing';\n\timport About from '../routes/About.svelte';\n</script>\n\n<footer id=\"footer\"\n\tstyle=\"color: {themes['neutral']['text']['primary']}; background-color: {themes['neutral'][\n\t\t'pale'\n\t]};\"\n>\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t<a href=\"/\" use:link>\n\t\t\t<img class=\"logo-img\" src=\"./img/favicon.png\" alt=\"Team 7\" />\n\t\t</a>\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclass=\"link\"\n\t\t\t\t\t\thref=\"/aboutus\"\n\t\t\t\t\t\tuse:link\n\t\t\t\t\t\t>Unser Dreamteam</a\n\t\t\t\t\t>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a class=\"link\" href=\"/\" use:link \n\t\t\t\t\t\t>Repository</a\n\t\t\t\t\t>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclass=\"link\"\n\t\t\t\t\t\thref=\"/sources\"\n\t\t\t\t\t\tuse:link\n\t\t\t\t\t\t>Quellen</a\n\t\t\t\t\t>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<p style=\"color: {themes['neutral']['text-dark']['teritary']};\">\n\t\t\t\tLetztes Update am 28.11.2023\n\t\t\t</p>\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { gsap } from 'gsap';\n\timport { themes } from '../config.js';\n\timport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\timport SplitType from 'split-type';\n\n\texport let bgcolor = null;\n\texport let center = true;\n\texport let short = false;\n\n\tlet splitTypes;\n\tonMount(() => {\n\t\tsetupGSAP();\n\t});\n\n\tfunction setupGSAP() {\n\t\t//gsap.registerPlugin(ScrollTrigger);\n\n\t\tvar tl = gsap.timeline();\n\n\t\tsplitTypes = document.querySelectorAll('#gsap-heading');\n\t\tsplitTypes.forEach((char, i) => {\n\t\t\tif (char.textContent.trim().length > 0) {\n\t\t\t\tconst text = new SplitType(char, { types: 'chars' });\n\t\t\t\ttl.from(text.chars, {\n\t\t\t\t\ty: 40,\n\t\t\t\t\tscaleY: 0,\n\t\t\t\t\tskewY: 8,\n\t\t\t\t\tskewX: -15,\n\t\t\t\t\tstagger: {\n\t\t\t\t\t\tamount: 1\n\t\t\t\t\t},\n\t\t\t\t\tdelay: 0.5,\n\t\t\t\t\tease: 'power3.out'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttl.from('#gsap-subheading', {\n\t\t\t\ty: 40,\n\t\t\t\topacity: 0,\n\t\t\t\tduration: 0.8,\n\t\t\t\tease: 'power3.out'\n\t\t\t});\n\t\t\ttl.from('.short', {\n\t\t\t\theight: '100vh',\n\t\t\t\tdelay: 0.5,\n\t\t\t\tduration: 0.6,\n\t\t\t\tease: 'power3.out'\n\t\t\t});\n\t\t});\n\t}\n</script>\n\n<header\n\tstyle=\"color: {themes['neutral']['text-dark']['primary']}; background-color: {bgcolor\n\t\t? bgcolor\n\t\t: themes['neutral']['background']}; \"\n\tclass:short\n>\n\t<div\n\t\tclass=\"v-padded col-wide middle\"\n\t\tstyle=\"position: relative\"\n\t\tclass:short\n\t\tclass:height-full={!short}\n\t>\n\t\t<div class:center>\n\t\t\t<h1 id=\"gsap-heading\">Was <br /> Deutschland <br /> bewegt</h1>\n\t\t\t<p\n\t\t\t\tid=\"gsap-subheading\"\n\t\t\t\tclass=\"text-big text-balanced\"\n\t\t\t\tstyle=\"margin-top: 10px; color:{themes.neutral['text-dark'].secondary}\"\n\t\t\t>\n\t\t\t\tDie häufigsten genutzten Verkehrsmittel: Autos, ÖPNV und die CO2-freundlichen Alternativen -\n\t\t\t\tFahrräder. Scrolle dich durch eine Daten-Geschichte über das, was dich täglich bewegt. 🙂\n\t\t\t</p>\n\t\t\t<div style=\"margin-top: 90px;\">\n\t\t\t\t<!-- <Arrow color=\"black\" {animation}></Arrow> -->\n\t\t\t</div>\n\t\t\t<slot />\n\t\t</div>\n\t</div>\n</header>\n\n<style>\n\t.short {\n\t\theight: calc(100vh - 32px);\n\t}\n\t.v-padded {\n\t\tbox-sizing: border-box;\n\t}\n</style>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport * as d3 from 'd3';\n\timport { themes } from '../config';\n\texport let rawData = []; // Pass the raw data as a prop\n\texport let animationStep;\n\tlet svg; // Reference to the SVG element\n\tconst margin = { top: 20, right: 26, bottom: 30, left: 80 };\n\texport let width = 500 - margin.left - margin.right;\n\texport let height = 300 - margin.top - margin.bottom;\n\texport let xTicks = 7;\n\texport let yTicks = 6;\n\n\tlet data; // This will hold the transformed data\n\tlet xScale, yScale, xAxis, yAxis;\n\tlet mount = false;\n\tlet line;\n\tlet inVisLine;\n\tlet yearLimit;\n\tlet svgAxis;\n\tlet lastLengths = {}; // Store the last length of each line\n\tlet circles = {}; // Store references to circle elements\n\tlet highlightedRegionsEl = {};\n\tconst transitionTime = 500;\n\tlet highlightedRegions = [\n\t\t{\n\t\t\tstep: 1,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2018, 0, 2),\n\t\t\tend: new Date(2019, 1, 30),\n\t\t\tcolor: 'grey',\n\t\t\thiddenLines: null,\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 2,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2020, 0, 30),\n\t\t\tend: new Date(2021, 0, 1),\n\t\t\tcolor: 'grey',\n\t\t\thiddenLines: null,\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 3,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2022, 5, 1),\n\t\t\tend: new Date(2022, 7, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 4,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2023, 3, 1),\n\t\t\tend: new Date(2023, 9, 1),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2015, 11, 1),\n\t\t\tend: new Date(2016, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2016, 11, 1),\n\t\t\tend: new Date(2017, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2017, 11, 1),\n\t\t\tend: new Date(2018, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2018, 11, 1),\n\t\t\tend: new Date(2019, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2019, 11, 1),\n\t\t\tend: new Date(2020, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2020, 11, 1),\n\t\t\tend: new Date(2021, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2021, 11, 1),\n\t\t\tend: new Date(2022, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 6,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2022, 11, 1),\n\t\t\tend: new Date(2023, 0, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.teritary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 7,\n\t\t\tevent: '',\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t\tcolor: null,\n\t\t\tinactiveColor: null,\n\t\t\thiddenLines: ['Oeffis', 'Auto'],\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 8,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2021, 0, 1),\n\t\t\tend: new Date(2023, 8, 30),\n\t\t\tcolor: 'grey',\n\t\t\tinactiveColor: 'grey',\n\t\t\thiddenLines: null,\n\t\t\tisVisible: false\n\t\t},\n\t\t{\n\t\t\tstep: 9,\n\t\t\tevent: '',\n\t\t\tstart: new Date(2023, 0, 1),\n\t\t\tend: new Date(2023, 8, 30),\n\t\t\tcolor: themes.oepnv.primary,\n\t\t\tinactiveColor: themes.oepnv.primary,\n\t\t\thiddenLines: ['Fahrrad', 'Auto'],\n\t\t\tisVisible: false\n\t\t}\n\t];\n\n\tfunction getYearLimit(step) {\n\t\tswitch (step) {\n\t\t\tcase 0:\n\t\t\t\treturn new Date(2015, 0, 30);\n\t\t\tcase 1:\n\t\t\t\treturn new Date(2019, 1, 30);\n\t\t\tcase 2:\n\t\t\t\treturn new Date(2021, 0, 1);\n\t\t\tcase 3:\n\t\t\t\treturn new Date(2022, 7, 30);\n\t\t\tcase 4:\n\t\t\t\treturn new Date(2023, 9, 1);\n\n\t\t\t// Add more cases as needed\n\t\t\tdefault:\n\t\t\t\treturn new Date(2023, 9, 1); // Latest date if step is not recognized\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tdata = updateDataStructure(rawData);\n\n\t\t// Aggregate all points to compute the domains\n\t\tsetupScales();\n\t\tsetupAxes();\n\t\tdrawLines();\n\t\tmount = true;\n\t});\n\n\t// update chart when animationStep changes\n\n\t$: if (mount && rawData.length > 0 && animationStep >= 0) {\n\t\tupdateChart(animationStep);\n\t}\n\n\tfunction setupScales() {\n\t\tlet minDate = d3.min(\n\t\t\tdata.flatMap((series) => series.ys),\n\t\t\t(d) => d.x\n\t\t);\n\t\tlet maxDate = d3.max(\n\t\t\tdata.flatMap((series) => series.ys),\n\t\t\t(d) => d.x\n\t\t);\n\n\t\txScale = d3.scaleTime().domain([minDate, maxDate]).range([0, width]);\n\n\t\tconst allPoints = data.flatMap((series) => series.ys);\n\t\tconst minY = d3.min(allPoints, (d) => d.y);\n\t\tconst maxY = d3.max(allPoints, (d) => d.y);\n\n\t\tyScale = d3\n\t\t\t.scaleLinear()\n\t\t\t.domain([minY - 10, maxY + 20])\n\t\t\t.range([height, 0]);\n\t}\n\n\tfunction setupAxes() {\n\t\txAxis = d3.axisBottom(xScale).ticks(xTicks).tickSize(-height);\n\t\tyAxis = d3.axisLeft(yScale).ticks(yTicks).tickFormat(d3.format('.2s')).tickSize(-width);\n\t}\n\n\tfunction drawLines() {\n\t\tline = d3\n\t\t\t.line()\n\t\t\t.x((d) => xScale(d.x))\n\t\t\t.y((d) => yScale(d.y));\n\n\t\tinVisLine = d3\n\t\t\t.line()\n\t\t\t.x((d) => xScale(d.x))\n\t\t\t.y((d) => yScale(d.y));\n\n\t\td3.select('#linechartrace').attr('viewBox', `0 0 500 300`);\n\n\t\tsvgAxis = d3\n\t\t\t.select('#linechartrace')\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(${margin.left},${margin.top})`)\n\n\t\t// Add xAxis\n\t\tsvgAxis\n\t\t\t.append('g')\n\t\t\t.attr('transform', `translate(0,${height})`) // Puts down x axis\n\t\t\t.call(xAxis)\n\n\t\tsvgAxis.selectAll('g line').style('stroke', themes.neutral.chartLines);\n\n\t\tsvgAxis.select('.domain').remove();\n\n\t\t// Add yAxis\n\t\tsvgAxis.append('g').call(yAxis).selectAll('g line').style('stroke', themes.neutral.chartLines);\n\n\t\tsvgAxis.select('.domain').attr('d', '0'); // Vanishes top line on chart\n\t\tsvgAxis.selectAll('g text')\n\t\t\t.style('fill', themes.neutral['text-dark'].secondary)\n\t\t\t.style('font-size', 8)\n\n\t\tconst inVisibleData = data.map((series) => ({\n\t\t\t...series,\n\t\t\tys: series.ys\n\t\t}));\n\n\t\tinVisibleData.forEach((series) => {\n\t\t\tlet path = d3.select(svg).select(`path.${series.name + 1}`);\n\t\t\tconst isNewPath = path.empty();\n\n\t\t\tif (isNewPath) {\n\t\t\t\tpath = d3\n\t\t\t\t\t.select('#linechartrace')\n\t\t\t\t\t.append('path')\n\t\t\t\t\t.attr('class', series.name + '1')\n\t\t\t\t\t.attr('fill', 'none')\n\t\t\t\t\t.attr('stroke', 'black')\n\t\t\t\t\t.attr('stroke-width', 0)\n\t\t\t\t\t.attr('transform', `translate(${margin.left},${margin.top})`);\n\t\t\t}\n\t\t\tpath.datum(series.ys).attr('d', line);\n\t\t});\n\n\t\tconst visibleData = data.map((series) => ({\n\t\t\t...series,\n\t\t\tys: series.ys\n\t\t}));\n\n\t\tvisibleData.forEach((series) => {\n\t\t\tlet path = d3.select(svg).select(`path.${series.name}`);\n\n\t\t\tpath = d3\n\t\t\t\t.select('#linechartrace')\n\t\t\t\t.append('path')\n\t\t\t\t.attr('class', series.name)\n\t\t\t\t.attr('fill', 'none')\n\t\t\t\t.attr('stroke', series.color)\n\t\t\t\t.attr('stroke-width', 2)\n\t\t\t\t.attr('transform', `translate(${margin.left},${margin.top})`);\n\n\t\t\tpath.datum(series.ys).attr('d', line);\n\t\t});\n\t}\n\n\tfunction updateChart(step) {\n\t\tyearLimit = getYearLimit(step);\n\n\t\tconst inVisibleData = data.map((series) => ({\n\t\t\t...series,\n\t\t\tys: series.ys.filter((d) => d.x <= yearLimit)\n\t\t}));\n\t\td3.select(svg).selectAll('circle').remove();\n\t\tlet isForward;\n\n\t\tinVisibleData.forEach((series) => {\n\t\t\tlet inVisPath = d3.select(svg).select(`path.${series.name + 1}`);\n\t\t\tlet path = d3.select(svg).select(`path.${series.name}`);\n\n\t\t\t// Set the data for the path and calculate its length\n\t\t\tinVisPath.datum(series.ys).attr('d', line);\n\t\t\tlet totalLength = inVisPath.node().getTotalLength();\n\t\t\tlet maxLength = path.node().getTotalLength();\n\n\t\t\t// Determine the direction of animation\n\t\t\tlet previousLength = lastLengths[series.name] || 0;\n\t\t\tisForward = totalLength > previousLength;\n\n\t\t\tcircles[series.name] = d3\n\t\t\t\t.select(svg)\n\t\t\t\t.append('circle')\n\t\t\t\t.attr('r', 5)\n\t\t\t\t.attr('fill', series.color)\n\t\t\t\t.style('opacity', 1);\n\n\t\t\t// Position the circle at the end of the previous segment\n\t\t\tconst previousPoint = path.node().getPointAtLength(previousLength);\n\t\t\tcircles[series.name]\n\t\t\t\t.attr('cx', previousPoint.x)\n\t\t\t\t.attr('cy', previousPoint.y)\n\t\t\t\t.attr('transform', `translate(${margin.left},${margin.top})`);\n\n\t\t\t// Set up the initial conditions for the animation\n\t\t\tpath.style('opacity', 1);\n\t\t\tif (isForward) {\n\t\t\t\tpath\n\t\t\t\t\t.attr('stroke-dasharray', maxLength)\n\t\t\t\t\t.attr('stroke-dashoffset', maxLength - previousLength)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.ease(d3.easeQuadOut)\n\t\t\t\t\t.duration(transitionTime)\n\t\t\t\t\t.attr('stroke-dashoffset', maxLength - totalLength)\n\t\t\t\t\t.tween('pathTween', () => {\n\t\t\t\t\t\treturn (t) => {\n\t\t\t\t\t\t\tconst point = path\n\t\t\t\t\t\t\t\t.node()\n\t\t\t\t\t\t\t\t.getPointAtLength(previousLength + (totalLength - previousLength) * t);\n\t\t\t\t\t\t\tcircles[series.name].attr('cx', point.x).attr('cy', point.y);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpath\n\t\t\t\t\t.attr('stroke-dasharray', maxLength)\n\t\t\t\t\t.attr('stroke-dashoffset', maxLength - previousLength)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.ease(d3.easeLinear)\n\t\t\t\t\t.duration(transitionTime)\n\t\t\t\t\t.attr('stroke-dashoffset', maxLength - totalLength)\n\t\t\t\t\t.tween('pathTween', () => {\n\t\t\t\t\t\treturn (t) => {\n\t\t\t\t\t\t\tconst currentLength = previousLength - (previousLength - totalLength) * t;\n\t\t\t\t\t\t\tconst point = path.node().getPointAtLength(currentLength);\n\t\t\t\t\t\t\tcircles[series.name].attr('cx', point.x).attr('cy', point.y);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Perform the transition\n\t\t\tlastLengths[series.name] = totalLength;\n\t\t});\n\t\tupdateHighlightedRegions(step);\n\t\t// if (isForward) highlightRegions(step);\n\t\t// else unhighlightRegions(step + 1);\n\t}\n\n\tfunction updateDataStructure(rawData) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: 'Fahrrad',\n\t\t\t\tys: transformData(rawData, 'FA'),\n\t\t\t\tcolor: themes.bike.primary\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Auto',\n\t\t\t\tys: transformData(rawData, 'AUT'),\n\t\t\t\tcolor: themes.car.primary\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Oeffis',\n\t\t\t\tys: transformData(rawData, 'OEF'),\n\t\t\t\tcolor: themes.oepnv.primary\n\t\t\t}\n\t\t];\n\t}\n\n\tfunction transformData(data, category) {\n\t\treturn data\n\t\t\t.filter((d) => d.code === category)\n\t\t\t.map((d) => ({ x: new Date(d.year, d.month - 1, 1), y: d.value }));\n\t}\n\n\tfunction highlightRegions(region) {\n\t\tif (!highlightedRegionsEl[region.step]) {\n\t\t\thighlightedRegionsEl[region.step] = [];\n\t\t}\n\n\t\tconst highlightRect = svgAxis\n\t\t\t.append('rect')\n\t\t\t.attr('class', `highlight-rect.step-${region.step}`)\n\t\t\t.attr('x', xScale(region.start))\n\t\t\t.attr('width', 0)\n\t\t\t.attr('y', 0)\n\t\t\t.attr('height', height)\n\t\t\t.style('fill', region.inactiveColor)\n\t\t\t.style('opacity', 0.2);\n\t\thighlightRect\n\t\t\t.transition()\n\t\t\t.duration(transitionTime) // Duration in milliseconds\n\t\t\t.attr('width', xScale(region.end) - xScale(region.start));\n\t\thighlightedRegionsEl[region.step];\n\n\t\thighlightedRegionsEl[region.step].push(highlightRect);\n\t}\n\n\tfunction unhighlightRegions(step) {\n\t\tif (highlightedRegionsEl[step]) {\n\t\t\t// Iterate over all highlightRect elements in the array\n\t\t\thighlightedRegionsEl[step].forEach((highlightRect) => {\n\t\t\t\t// Apply transition to each element\n\t\t\t\tif (!highlightRect.empty()) {\n\t\t\t\t\t// Check if the element exists\n\t\t\t\t\thighlightRect.interrupt();\n\t\t\t\t}\n\n\t\t\t\thighlightRect\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(transitionTime) // Duration in milliseconds\n\t\t\t\t\t.attr('width', 0) // Assuming you want to animate width to 0\n\t\t\t\t\t.on('end', () => {\n\t\t\t\t\t\thighlightRect.remove(); // Remove the element after animation\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Clear the array after processing\n\t\t\t// highlightedRegionsEl[step] = [];\n\t\t}\n\t}\n\n\tfunction updateHighlightedRegions(step) {\n\t\thighlightedRegions.forEach((region) => {\n\t\t\tif (region.step === step) {\n\t\t\t\t// Highlight this region as it is before or at the current step\n\t\t\t\tif (!region.isVisible) {\n\t\t\t\t\tif (region.start && region.end) {\n\t\t\t\t\t\tdrawStartLine(region);\n\t\t\t\t\t\thighlightRegions(region);\n\t\t\t\t\t}\n\t\t\t\t\tlowerPathOpacity(region);\n\t\t\t\t\tregion.isVisible = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Unhighlight this region as it is after the current step\n\t\t\t\tif (region.isVisible) {\n\t\t\t\t\tundrawStartLine(region.step);\n\t\t\t\t\tunhighlightRegions(region.step);\n\t\t\t\t\tregion.isVisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction lowerPathOpacity(region) {\n\t\tif (region.hiddenLines) {\n\t\t\tregion.hiddenLines.forEach((lineName) => {\n\t\t\t\tlet path = d3.select(svg).select(`path.${lineName}`);\n\t\t\t\tcircles[lineName].style('opacity', 0.2);\n\t\t\t\tpath.style('opacity', 0.2);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction drawStartLine(region) {\n\t\tconst startLineKey = `start-line-${region.step}`;\n\t\tconst startTextKey = `start-text-${region.step}`;\n\n\t\t// Initialize as arrays if they don't exist\n\t\tif (!highlightedRegionsEl[startLineKey]) {\n\t\t\thighlightedRegionsEl[startLineKey] = [];\n\t\t}\n\t\tif (!highlightedRegionsEl[startTextKey]) {\n\t\t\thighlightedRegionsEl[startTextKey] = [];\n\t\t}\n\n\t\t// Create and animate the start line\n\t\tconst newLine = svgAxis\n\t\t\t.append('line')\n\t\t\t.attr('class', `start-line step-${region.step}`)\n\t\t\t.attr('x1', xScale(region.start))\n\t\t\t.attr('x2', xScale(region.start))\n\t\t\t.attr('y1', height)\n\t\t\t.attr('y2', height)\n\t\t\t.attr('stroke', region.color)\n\t\t\t.attr('stroke-opacity', 0.7)\n\t\t\t.attr('stroke-width', 2);\n\n\t\t// Add the new line to the array\n\t\thighlightedRegionsEl[startLineKey].push(newLine);\n\n\t\t// Animate the start line\n\t\tnewLine.transition().duration(transitionTime).attr('y2', 0);\n\n\t\t// Create and animate the text\n\t\tconst newText = svgAxis\n\t\t\t.append('text')\n\t\t\t.attr('class', `start-text step-${region.step}`)\n\t\t\t.attr('x', xScale(region.start))\n\t\t\t.attr('y', -5)\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.text(region.event)\n\t\t\t.style('fill', region.color)\n\t\t\t.style('opacity', 0)\n\t\t\t.style('font-weight', 'bold')\n\t\t\t.style('font-size', '12px');\n\n\t\t// Add the new text to the array\n\t\thighlightedRegionsEl[startTextKey].push(newText);\n\n\t\t// Animate the text\n\t\tnewText.transition().duration(transitionTime).style('opacity', 1);\n\t}\n\n\tfunction undrawStartLine(step) {\n\t\tconst startLineKey = `start-line-${step}`;\n\t\tconst startTextKey = `start-text-${step}`;\n\n\t\t// Remove start lines\n\t\tif (highlightedRegionsEl[startLineKey]) {\n\t\t\thighlightedRegionsEl[startLineKey].forEach((startLine) => {\n\t\t\t\tstartLine\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(transitionTime)\n\t\t\t\t\t.attr('y2', height)\n\t\t\t\t\t.on('end', () => startLine.remove());\n\t\t\t});\n\t\t\t// Clear the array\n\t\t\thighlightedRegionsEl[startLineKey] = [];\n\t\t}\n\n\t\t// Remove start texts\n\t\tif (highlightedRegionsEl[startTextKey]) {\n\t\t\thighlightedRegionsEl[startTextKey].forEach((startText) => {\n\t\t\t\tstartText\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(transitionTime)\n\t\t\t\t\t.style('opacity', 0)\n\t\t\t\t\t.on('end', () => startText.remove());\n\t\t\t});\n\t\t\t// Clear the array\n\t\t\thighlightedRegionsEl[startTextKey] = [];\n\t\t}\n\t}\n</script>\n\n<div>\n\t<svg id=\"linechartrace\" bind:this={svg}> </svg>\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex; /* Enables Flexbox */\n\t\tflex-direction: column; /* Stacks children vertically */\n\t\tjustify-content: center; /* Centers children along the main axis (vertically in this case) */\n\t\talign-items: center; /* Centers children along the cross axis (horizontally) */\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { onMount, onDestroy } from 'svelte';\n\timport { themes } from '../config';\n\timport { gsap } from 'gsap';\n\timport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\timport { subscribeResize } from '../helpers/resizeService.js';\n\timport Car from '../ui/Car.svelte';\n\timport Oepnv from '../ui/Oepnv.svelte';\n\timport Bike from '../ui/Bike.svelte';\n\n\tlet enableHover = false;\n\tlet navContainer;\n\n\tlet hoverAnimation;\n\tlet showIconAnimation;\n\tlet shrinkNavAnimation;\n\n\tonMount(() => {\n\t\tsetupGSAP();\n\t});\n\n\tonDestroy(() => {});\n\n\tsubscribeResize(setupGSAP);\n\n\t//GSAP\n\tgsap.registerPlugin(ScrollTrigger);\n\n\tfunction setupGSAP() {\n\t\tnavContainer = document.querySelector('.nav-container');\n\n\t\tsetTimeout(() => {\n\t\t\tnavContainer.addEventListener('mouseenter', expandScrollbar);\n\t\t\tnavContainer.addEventListener('mouseleave', shrinkScrollbar);\n\t\t}, 1200);\n\n\t\t// ANIMATIONS\n\t\tshowIconAnimation = gsap.to('.iconNavbar', {\n\t\t\tautoAlpha: '100%',\n\t\t\tease: 'power2.inOut',\n\t\t\tduration: 0.3,\n\t\t\tpaused: true\n\t\t});\n\n\t\thoverAnimation = gsap.to(navContainer, {\n\t\t\twidth: 200,\n\t\t\tease: 'power4.inOut',\n\t\t\tduration: 0.4,\n\t\t\tpaused: true\n\t\t});\n\n\t\tshrinkNavAnimation = gsap.to(navContainer, {\n\t\t\twidth: 12,\n\t\t\tease: 'power4.inOut',\n\t\t\tduration: 1,\n\t\t\tpaused: true\n\t\t});\n\n\t\t// SCROLLTRIGGERS\n\t\tScrollTrigger.create({\n\t\t\tid: 'toSide',\n\t\t\ttrigger: '#nav-animator',\n\t\t\tstart: 'top top',\n\t\t\tendTrigger: '#nav-animator',\n\t\t\tend: 'bottom bottom',\n\t\t\t//markers: true,\n\t\t\tonLeave: () => {\n\t\t\t\ttoggleToSide(true);\n\t\t\t},\n\t\t\tonEnterBack: () => {\n\t\t\t\ttoggleToSide(false);\n\t\t\t}\n\t\t});\n\n\t\tScrollTrigger.create({\n\t\t\tid: 'scroll',\n\t\t\ttrigger: '#nav-animator',\n\t\t\tstart: 'top top',\n\t\t\tendTrigger: '#footer',\n\t\t\tend: 'top bottom',\n\t\t\t//markers: true,\n\t\t\toverwrite: 'auto',\n\t\t\tonUpdate: (self) => {\n\t\t\t\tgsap.to('.nav-scroller', {\n\t\t\t\t\theight: self.progress * 100 + '%'\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeaveBack: () => {\n\t\t\t\tconsole.log('back in');\n\t\t\t\tgsap.to('.nav-scroller', {\n\t\t\t\t\theight: '100%'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tScrollTrigger.create({\n\t\t\tid: 'hover',\n\t\t\ttrigger: '#nav-animator',\n\t\t\tstart: 'bottom top',\n\t\t\tendTrigger: '#nav-animator',\n\t\t\tend: 'bottom bottom',\n\t\t\t//markers: true,\n\t\t\tonLeave: () => {\n\t\t\t\tenableHover = true;\n\t\t\t},\n\t\t\tonEnterBack: () => {\n\t\t\t\tenableHover = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction expandScrollbar() {\n\t\tif (enableHover) {\n\t\t\tconsole.log('expand - scroll');\n\t\t\thoverAnimation.play();\n\t\t\tshowIconAnimation.play();\n\t\t}\n\t}\n\n\tfunction shrinkScrollbar() {\n\t\tif (enableHover) {\n\t\t\tconsole.log('shrink - scroll');\n\t\t\thoverAnimation.reverse();\n\t\t\tshowIconAnimation.reverse();\n\t\t}\n\t}\n\n\tfunction toggleToSide(shrink) {\n\t\tif (shrink) {\n\t\t\tnavContainer.classList.add('onside');\n\t\t\tconsole.log('shrink');\n\t\t\tshrinkNavAnimation.play();\n\t\t\tshowIconAnimation.reverse();\n\t\t}\n\t\tif (!shrink) {\n\t\t\tnavContainer.classList.remove('onside');\n\t\t\tconsole.log('expand');\n\t\t\tshrinkNavAnimation.reverse();\n\t\t\tshowIconAnimation.play();\n\t\t}\n\t}\n</script>\n\n<div class=\"nav-animator\" id=\"nav-animator\">\n\t<div class=\"nav-container\" style=\"color: {themes.neutral.text.primary};\">\n\t\t<div class=\"nav-scroller\" style=\"background-color: {themes.oepnv.primary};\">\n\t\t\t<div class=\"iconSizer\">\n\t\t\t\t<Oepnv size=\"100%\" cssClass=\"iconNavbar\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"nav-scroller\" style=\"background-color: {themes.bike.primary};\">\n\t\t\t<div class=\"iconSizer\">\n\t\t\t\t<Bike size=\"100%\" cssClass=\"iconNavbar\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"nav-scroller\" style=\"background-color: {themes.car.primary};\">\n\t\t\t<div class=\"iconSizer\">\n\t\t\t\t<Car size=\"100%\" cssClass=\"iconNavbar\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t.nav-animator {\n\t\twidth: 100vw;\n\t\theight: 80vh;\n\t}\n\t:global(.nav-container) {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tright: auto;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(237, 237, 237, 0);\n\t\tz-index: 100;\n\t\tbackdrop-filter: blur(10px);\n\t}\n\t:global(.nav-container.onside) {\n\t\tposition: fixed;\n\t\tbackground-color: rgba(242, 242, 242, 0.8);\n\t}\n\t.nav-scroller {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\t\tborder-radius: 0px 0px 50vw 50vw;\n\t}\n\t.iconSizer {\n\t\twidth: 50%;\n\t}\n\n</style>\n",
    "<script context=\"module\">\r\n\t// Based on svelte-scroller by Rich Harris\r\n\t// https://github.com/sveltejs/svelte-scroller\r\n\t// Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach((fn) => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver(\r\n\t\t\t(entries, observer) => {\r\n\t\t\t\tentries.forEach((entry) => {\r\n\t\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tupdate();\r\n\t\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5; // Defines the % where the Map changes\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\texport let id = null;\r\n\r\n\tlet outer;\r\n\tlet bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0; // window height\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: top, bottom, threshold, parallax, update();\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n\tfunction setFixed() {\r\n\t\tif (bgContainer) {\r\n\t\t\tlet style = `position: ${\r\n\t\t\t\tfixed ? 'fixed' : 'absolute'\r\n\t\t\t}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${\r\n\t\t\t\tinverted ? 3 : 1\r\n\t\t\t};`;\r\n\t\t\tbgContainer.style.cssText = style;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - bcr.left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\t// only visible when inside scroller\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top; //4302\r\n\t\tconst background_height = bg.bottom - bg.top; //\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t} // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? foreground_height - background_height\r\n\t\t\t\t: foreground_height - available_space;\r\n\t\t\tif (fixed) {\r\n\t\t\t\tfixed = false;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? Math.round(top_px - progress * (background_height - available_space))\r\n\t\t\t\t: top_px;\r\n\t\t\tif (!fixed) {\r\n\t\t\t\tfixed = true;\r\n\t\t\t\tsetFixed();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh} />\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container class=\"background-container\" bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\" />\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\" />\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>\r\n",
    "<!-- App.svelte -->\n\n<script>\n\timport AboutCard from '../layout/AboutCard.svelte';\n\n\tconst cards = [\n\t\t{\n\t\t\timageUrl: './img/avatar/1.png',\n\t\t\tname: 'Shady Mansour',\n\t\t\tdescription:\n\t\t\t\t'As a passionate software engineer, I thrive on crafting robust code and designing the overarching architecture of our projects. My focus is on turning ideas into functional and efficient solutions, ensuring the success of our data visualization endeavors.'\n\t\t},\n\t\t{\n\t\t\timageUrl: './img/avatar/12.png',\n\t\t\tname: 'Raphael Wennmacher',\n\t\t\tdescription:\n\t\t\t\t'Being a creative designer is more than a profession—it’s a way of life. I have a profound love for visual aesthetics and a keen ability to implement elegant design solutions. My goal is to seamlessly blend functionality with modern and sleek design, creating a visual experience that resonates.'\n\t\t},\n\t\t{\n\t\t\timageUrl: './img/avatar/82.png',\n\t\t\tname: 'Fiona Lau',\n\t\t\tdescription:\n\t\t\t\t'As an innovative thinker, my primary focus lies in ideation and the creation of compelling infographics. I excel in translating complex ideas into visually appealing and informative graphics that tell a story. With a passion for data visualization, I bring a unique perspective to our projects.'\n\t\t},\n\t\t{\n\t\t\timageUrl: './img/avatar/85.png',\n\t\t\tname: 'Elena Herzog',\n\t\t\tdescription:\n\t\t\t\t'Storytelling is my craft, and data visualization is my canvas. I am a multifaceted storyteller and ideator, weaving narratives that engage and captivate audiences. By combining creative storytelling with impactful data visualization, I strive to convey meaningful insights that resonate with our audience.'\n\t\t},\n\t\t{\n\t\t\timageUrl: './img/avatar/44.png',\n\t\t\tname: 'Paul Walter',\n\t\t\tdescription:\n\t\t\t\t'Versatility is my strength. As an engineer, I am passionate about coding, implementing solutions, and exploring new possibilities. I enjoy the challenge of engineering and implementation while contributing to the exploration and ideation process. Embracing every facet of our projects with enthusiasm.'\n\t\t}\n\t];\n</script>\n\n<h1>About Us</h1>\n\n<div class=\"card-container\">\n\t{#each cards as { imageUrl, name, description, index }}\n\t\t<AboutCard {imageUrl} {name} {description} key={index} />\n\t{/each}\n</div>\n\n<style>\n\t.card-container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n</style>\n",
    "<script>\n\t// CORE IMPORTS\n\timport { onMount, onDestroy } from 'svelte';\n\timport bbox from '@turf/bbox';\n\timport { getMotion } from '../utils.js';\n\timport { themes, spacings } from '../config.js';\n\t\n\n\t// COMPONENTS IMPORT\n\timport { Map, MapSource, MapLayer, MapTooltip } from '@onsvisual/svelte-maps';\n\timport Header from '../layout/Header.svelte';\n\timport Scroller from '../layout/Scroller.svelte';\n\timport Footer from '../layout/Footer.svelte';\n\timport Section from '../layout/Section.svelte';\n\timport NavIndicator from '../layout/NavIndicator.svelte';\n\timport Spacer from '../layout/Spacer.svelte';\n\timport Legend from '../ui/Legend.svelte';\n\timport Barcharts from '../layout/AnimatedBarChart.svelte';\n\timport LineChartRace from '../layout/LineChartRace.svelte';\n\timport Bike from '../ui/Bike.svelte';\n\timport Car from '../ui/Car.svelte';\n\timport Oepnv from '../ui/Oepnv.svelte';\n\n\t// DATA IMPORT\n\timport { getMapJson } from '../helpers/getMapJson.js';\n\timport { getUsageData } from '../helpers/getUsageData.js';\n\timport { getPriceTrendData } from '../helpers/getPriceTrendData.js';\n\timport { getFineData } from '../helpers/getFineData.js';\n\n\t// Config\n\tconst threshold = 0.8;\n\tconst mapbounds = [\n\t\t[5, 47.3],\n\t\t[15, 55.2]\n\t];\n\n\t// State\n\tlet animation = getMotion(); // Set animation preference depending on browser preference true/false\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\n\t// Data\n\tlet usageData;\n\tlet geoStates;\n\tlet geoCities;\n\tlet priceTrendData;\n\tlet fineData;\n\n\t// Map\n\tlet map = null; // Bound to mapbox 'map' instance once initialised\n\tlet hovered; // Hovered district (chart or map)\n\tlet selected; // Selected district (chart or map)\n\tlet showCities;\n\tlet mapHighlighted = []; // Highlighted district (map only)\n\tlet mapKey = 'Car'; // Key for data to be displayed on map\n\tlet explore = false; // Allows chart/map interactivity to be toggled on/off\n\tlet mapColor = 'interpolateInferno'; // Changes the default color of map\n\n\t// Linechart\n\tlet lineChartTrigger = 0;\n\tlet currentLineChart = '';\n\n\t// Barchart\n\tlet currentBarChart = '';\n\tlet fineDataFiltered = [];\n\n\t// FUNCTIONS\n\tonMount(() => {\n\t\tidPrev = { ...id };\n\t});\n\n\n\t// Functions for chart and map on:select and on:hover events\n\tfunction doSelect(e) {\n\t\tconsole.log(e);\n\t\tif (e.detail.id == selected) {\n\t\t\tselected = null;\n\t\t\tfitBounds(mapbounds);\n\t\t} else {\n\t\t\tselected = e.detail.id;\n\t\t\tif (e.detail.feature) fitById(selected); // Fit map if select event comes from map\n\t\t}\n\t}\n\tfunction doHover(e) {\n\t\thovered = e.detail.id;\n\t\t//console.log(e.detail);\n\t}\n\n\t// Functions for map component\n\tfunction fitBounds(bounds) {\n\t\tif (map) {\n\t\t\tmap.fitBounds(bounds, { animate: animation, padding: 30 });\n\t\t}\n\t}\n\tfunction fitById(id) {\n\t\tif (geoStates && id) {\n\t\t\tlet feature = geoStates.features.find((d) => d.properties.AREACD == id);\n\t\t\tlet bounds = bbox(feature.geometry);\n\t\t\tfitBounds(bounds);\n\t\t}\n\t}\n\n\tfunction checkCities() {\n\t\tif (showCities) {\n\t\t\tshowCities = false;\n\t\t\tif (map.getLayer('city-points')) {\n\t\t\t\tmap.removeLayer('city-points');\n\t\t\t}\n\t\t\tif (map.getSource('cities')) {\n\t\t\t\tmap.removeSource('cities');\n\t\t\t}\n\t\t}\n\t}\n\n\t// Linechart\n\t$: if (id['lineChart'] && currentLineChart !== id['lineChart']) {\n\t\tcurrentLineChart = id['lineChart'];\n\t\tlineChartTrigger = parseInt(id['lineChart'].slice(-2), 10);\n\t}\n\n\t// Barchart\n\t$: if (fineData && id['barChart'] && currentBarChart !== id['barChart']) {\n\t\tcurrentBarChart = id['barChart'];\n\t\tupdateBarChartData(id['barChart']);\n\t}\n\n\tfunction updateBarChartData(chartId) {\n\t\tconst trigger = parseInt(chartId.charAt(chartId.length - 1), 10);\n\t\tswitch (trigger) {\n\t\t\tcase 1:\n\t\t\t\tfineDataFiltered = fineData.filter((d) => d.type === 'fahrrad');\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tfineDataFiltered = fineData.filter((d) => ['fahrrad', 'auto'].includes(d.type));\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tfineDataFiltered = fineData.filter((d) => ['fahrrad', 'auto', 'oepnv'].includes(d.type));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfineDataFiltered = [];\n\t\t\t\tbreak;\n\t\t}\n\t\tfineDataFiltered = fineDataFiltered.sort((a, b) => a.amount - b.amount);\n\t}\n\n\t// Actions for Scroller components\n\tconst actions = {\n\t\tmap: {\n\t\t\t// Actions for <Scroller/> with id=\"map\"\n\t\t\tmap01: () => {\n\t\t\t\t// Action for <section/> with data-id=\"map01\"\n\t\t\t\tfitBounds(mapbounds);\n\t\t\t\tmapKey = 'Car';\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t\tmapColor = 'interpolateCar';\n\t\t\t\tcheckCities();\n\t\t\t},\n\t\t\tmap02: () => {\n\t\t\t\t// fitBounds(mapbounds);\n\t\t\t\tmapKey = 'Oepnv';\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t\tmapColor = 'interpolateOepnv';\n\t\t\t\tcheckCities();\n\t\t\t},\n\t\t\tmap03: () => {\n\t\t\t\tmapKey = 'Oepnv';\n\t\t\t\tlet hl = [...usageData.data.region.indicators].sort((a, b) => b[mapKey] - a[mapKey])[0];\n\t\t\t\tfitById(hl.code);\n\t\t\t\tmapHighlighted = [hl.code];\n\t\t\t\texplore = false;\n\t\t\t\tcheckCities();\n\t\t\t},\n\t\t\tmap04: () => {\n\t\t\t\tfitBounds(mapbounds);\n\t\t\t\tmapKey = 'Oepnv';\n\t\t\t\tmapHighlighted = [];\n\t\t\t\texplore = false;\n\t\t\t\tmapColor = 'interpolateOepnv';\n\t\t\t\tshowCities = true;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Code to run Scroller actions when new caption IDs come into view\n\t$: id && runActions(Object.keys(actions)); // Run below code when 'id' object changes\n\tfunction runActions(codes = []) {\n\t\tcodes.forEach((code) => {\n\t\t\tif (id[code] != idPrev[code]) {\n\t\t\t\tif (actions[code][id[code]]) {\n\t\t\t\t\tactions[code][id[code]]();\n\t\t\t\t}\n\t\t\t\tidPrev[code] = id[code];\n\t\t\t}\n\t\t});\n\t}\n\n\t// INITIALISATION CODE - Load and Preprocess Data\n\tgetMapJson()\n\t\t.then((geo) => {\n\t\t\tgeoStates = geo.states;\n\t\t\tgeoCities = geo.cities;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error fetching MapJson:', error);\n\t\t});\n\n\tgetUsageData()\n\t\t.then((loadedUsageData) => {\n\t\t\tusageData = loadedUsageData;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error fetching UsageData:', error);\n\t\t});\n\n\n\tgetPriceTrendData()\n\t\t.then((loadedVerkehrData) => {\n\t\t\tpriceTrendData = loadedVerkehrData;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error fetching verkehr data:', error);\n\t\t});\n\n\n\tgetFineData()\n\t\t.then((loadedFineData) => {\n\t\t\tfineData = loadedFineData;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error fetching FineData:', error);\n\t\t});\n\n</script>\n\n\n<Header bgcolor={themes.neutral.background} center={false} short={true}></Header>\n\n{#if id['map']}\n\t<NavIndicator />\n{/if}\n\n<Spacer size={spacings['xxxxl-96']} />\n<Section>\n\t<div slot=\"animating\">\n\t\t<h2>This is Deutschland</h2>\n\t\t<p class=\"mb\">\n\t\t\tEin wichtiger Faktor, um das Mobilitätsverhalten in Deutschland zu verstehen, ist der Preis.\n\t\t\tDoch die Preise selbst zu vergleichen, liefert keine genauen Ergebnisse. Deshalb betrachten\n\t\t\twir die Verkehrsmittel im Verhältnis zum Verbraucherpreisindex *. Betrachten wir den\n\t\t\tPreisindex für die verschiedenen Verkehrsmittel genauer, sehen wir, wie verschiedene\n\t\t\tEreignisse diesen möglicherweise beeinflussen.\n\t\t</p>\n\t</div>\n\t<div class=\"erklaerungs-texte\" style=\"color: {themes.neutral['text-dark'].teritary};\">\n\t\t<p>\n\t\t\t* Misst monatlich die durchschnittliche Preisentwicklung aller Waren und Dienstleistungen, die\n\t\t\tprivate Haushalte in Deutschland für Konsumzwecke kaufen In Deutschland sind alle\n\t\t\tVerkehrsmittel unterschiedlich teuer, was von verschiedenen Ereignissen zu verschiedenen\n\t\t\tZeitpunkten beeinflusst wird.\n\t\t</p>\n\t</div>\n</Section>\n\n<Scroller {threshold} bind:id={id['lineChart']}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t{#if priceTrendData}\n\t\t\t\t\t<div class=\"chart\">\n\t\t\t\t\t\t<LineChartRace\n\t\t\t\t\t\t\trawData={priceTrendData.data.timeseries}\n\t\t\t\t\t\t\tanimationStep={lineChartTrigger}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"lineChart00\"></section>\n\t\t<section data-id=\"lineChart01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<div class=\"icon-heading\">\n\t\t\t\t\t<div class=\"icon-background\" style=\"background-color: {themes.bike.teritary};\">\n\t\t\t\t\t\t<Bike size=\"40\" color={themes.bike.primary} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"icon-background\" style=\"background-color: {themes.car.teritary};\">\n\t\t\t\t\t\t<Car size=\"40\" color={themes.car.primary} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"icon-background\" style=\"background-color: {themes.oepnv.teritary};\">\n\t\t\t\t\t\t<Oepnv size=\"40\" color={themes.oepnv.primary} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2>Autos</h2>\n\t\t\t\t</div>\n\t\t\t\t<p>\n\t\t\t\t\tEine auffallende Preisentwicklung der Emissionsberechtigung (EB) zeigt sich 2018: Während\n\t\t\t\t\tam 02.01.2018 für EB der Preis pro Tonne CO2 noch bei 7,81€ liegt, verzeichnen wir ein\n\t\t\t\t\tJahr später am 02.01.2019 einen Preis von 25,31€.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<section data-id=\"lineChart01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tDer Preis der Emissionsberechtigung entspricht einem Anstieg um 324%. Diese Steigerung\n\t\t\t\t\tmarkiert den Beginn eines anhaltenden Trends, der sich auf die Preise und Art der\n\t\t\t\t\tFahrzeuge auswirkt. Ab diesem Zeitpunkt gewinnen Elektrofahrzeuge und Plug-in-Hybriden\n\t\t\t\t\tnoch schneller an Beliebtheit.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tZu Beginn der Corona Pandemie 2020 kommt es zu Produktionsstopps und Schließungen von\n\t\t\t\t\tFabriken, welche die Lieferketten beeinflussen. Im Januar 2021 folgen dadurch in der\n\t\t\t\t\tHalbleiterproduktion Lieferengpässe und starke Preisanstiege.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tIm Juni, Juli und August 2022 wird kurzzeitig das 9€ Ticket eingeführt, wodurch Bus und\n\t\t\t\t\tBahn erschwinglicher werden.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tNach dem kurzen Anstieg steht ab April 2023 das Deutschlandticket für 49€ zur Verfügung.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart05\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">Generell sehen wir, dass alle Kurven ansteigen.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart06\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tDer <strong style=\"color: {themes.oepnv.primary};\">ÖPNV</strong> passt immer zum Jahreswechsel\n\t\t\t\t\tdie Preise an. Die stärksten Anpassungen sind dabei 2016 und 2023.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart07\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tHingegen bleibt der <strong style=\"color: {themes.bike.primary};\">Fahrrad-Index</strong> weitestgehend\n\t\t\t\t\tkonstant.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"lineChart08\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>\n\t\t\t\t\tDas generelle Ansteigen aller Kurven kann anhand der wachsenden Inflation begründet\n\t\t\t\t\twerden. Während diese sich normalerweise zwischen 0% und 2% bewegen, beobachten wir seit\n\t\t\t\t\t2021 eine signifikante Preissteigerung. Im Vergleich zu den Vorjahren liegt die\n\t\t\t\t\tInflationsrate 2021 bei 3,1%, 2022 bereits bei 6,9% und sinkt 2023 auf 5,9%.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<!-- add marker -->\n\t\t</section>\n\n\t\t<section data-id=\"lineChart09\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p lang=\"de\">\n\t\t\t\t\tDoch gerade der ÖPNV hat durch die besonderen Angebote 2023 eine Deflation von -22,7% im\n\t\t\t\t\tVergleich zum Vorjahr. Das einzige Gut, das noch günstiger geworden ist, ist Butter mit\n\t\t\t\t\t-24,8%.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<section data-id=\"lineChart10\"></section>\n\t</div>\n</Scroller>\n\n<Spacer size={spacings['xxxxl-96']} />\n\n<Section>\n\t<div slot=\"animating\">\n\t\t<h2>This is Deutschland</h2>\n\t\t<p class=\"mb\">\n\t\t\tDer ÖPNV ist mittlerweile eine preiswerte Alternative zum Auto. Doch nicht nur der Preis ist\n\t\t\tein wichtiger Faktor, der entscheidend für die Wahl des Verkehrsmittel ist. Es gibt starke\n\t\t\tUnterschiede in der Nutzung des ÖPNV’s in den Bundesländern, was auf eine multifaktorielle\n\t\t\tErklärung hindeutet.\n\t\t</p>\n\t</div>\n</Section>\n\n{#if geoStates && geoCities && usageData.data.region.indicators}\n\t<Scroller {threshold} bind:id={id['map']}>\n\t\t<div slot=\"background\">\n\t\t\t<Legend indicators={usageData.data.region.indicators} {mapKey}></Legend>\n\t\t\t<figure>\n\t\t\t\t<div class=\"col-full height-full\">\n\t\t\t\t\t<Map bind:map interactive={false} location={{ bounds: mapbounds }}>\n\t\t\t\t\t\t<MapSource id=\"lad\" type=\"geojson\" data={geoStates} promoteId=\"AREACD\" maxzoom={13}>\n\t\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\t\tid=\"lad-fill\"\n\t\t\t\t\t\t\t\tidKey=\"code\"\n\t\t\t\t\t\t\t\tcolorKey={mapKey + '_color'}\n\t\t\t\t\t\t\t\tdata={usageData.data.region.indicators}\n\t\t\t\t\t\t\t\ttype=\"fill\"\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t{selected}\n\t\t\t\t\t\t\t\ton:select={doSelect}\n\t\t\t\t\t\t\t\tclickIgnore={!explore}\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t{hovered}\n\t\t\t\t\t\t\t\ton:hover={doHover}\n\t\t\t\t\t\t\t\thighlight\n\t\t\t\t\t\t\t\thighlighted={mapHighlighted}\n\t\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t\t'fill-color': [\n\t\t\t\t\t\t\t\t\t\t'case',\n\t\t\t\t\t\t\t\t\t\t['!=', ['feature-state', 'color'], null],\n\t\t\t\t\t\t\t\t\t\t['feature-state', 'color'],\n\t\t\t\t\t\t\t\t\t\t'rgba(255, 255, 255, 0)'\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'fill-opacity': 0.7\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MapTooltip\n\t\t\t\t\t\t\t\t\tcontent={hovered\n\t\t\t\t\t\t\t\t\t\t? `${\n\t\t\t\t\t\t\t\t\t\t\t\tusageData.metadata.region.lookup[hovered].name\n\t\t\t\t\t\t\t\t\t\t  }<br/><strong>${usageData.data.region.indicators\n\t\t\t\t\t\t\t\t\t\t\t\t.find((d) => d.code == hovered)\n\t\t\t\t\t\t\t\t\t\t\t\t[mapKey].toLocaleString()} personenkilometer</strong>`\n\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MapLayer>\n\t\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\t\tid=\"lad-line\"\n\t\t\t\t\t\t\t\ttype=\"line\"\n\t\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t\t'line-color': [\n\t\t\t\t\t\t\t\t\t\t'case',\n\t\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'hovered'], true],\n\t\t\t\t\t\t\t\t\t\t'white',\n\t\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'selected'], true],\n\t\t\t\t\t\t\t\t\t\t'black',\n\t\t\t\t\t\t\t\t\t\t['==', ['feature-state', 'highlighted'], true],\n\t\t\t\t\t\t\t\t\t\t'black',\n\t\t\t\t\t\t\t\t\t\t'rgba(255,255,255,0)'\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'line-width': 2\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MapSource>\n\t\t\t\t\t\t{#if showCities}\n\t\t\t\t\t\t\t<MapSource id=\"cities\" type=\"geojson\" data={geoCities} promoteId=\"AREANM\">\n\t\t\t\t\t\t\t\t<MapLayer\n\t\t\t\t\t\t\t\t\tid=\"city-points\"\n\t\t\t\t\t\t\t\t\ttype=\"circle\"\n\t\t\t\t\t\t\t\t\tpaint={{\n\t\t\t\t\t\t\t\t\t\t'circle-radius': 5,\n\t\t\t\t\t\t\t\t\t\t'circle-color': '#007cbf'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MapSource>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</Map>\n\t\t\t\t</div>\n\t\t\t</figure>\n\t\t</div>\n\n\t\t<div slot=\"foreground\">\n\t\t\t<section data-id=\"map01\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tBetrachtet man die gefahrenen Kilometer pro Einwohner, werden Unterschiede zwischen den\n\t\t\t\t\t\tBundesländern sichtbar - Mache dir dein eigenes Bild der Nutzung des ÖPNV’s in den\n\t\t\t\t\t\tBundesländern und erkunde die Deutschlandkarte:\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSieht man vom Luftverkehr ab, verursachen Autos und Motorräder 2017 die höchsten\n\t\t\t\t\t\tCO2-Emissionen je Personenkilometer: Sie verbrauchen sogar 2,5-mal so viel wie der ÖPNV\n\t\t\t\t\t\tund 20-mal so viel wie Fahrräder.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map03\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t{#each [[...usageData.data.region.indicators].sort((a, b) => b['2023'] - a['2023'])[0]] as region}\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIn Hessen kommen <strong>11 mal</strong> so viele Kilometer auf einen Einwohner wie im\n\t\t\t\t\t\t\tSaarland.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map04\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn Berlin haben 99,4% der Einwohner in unmittelbarer Nähe* eine Haltestelle.\n\t\t\t\t\t\tMecklenburg-Vorpommern ist mit 66,1% das Schlusslicht. Die Netzdichte könnte ein Grund\n\t\t\t\t\t\tfür die Unterschiede zwischen den Bundesländern sein\n\t\t\t\t\t</p>\n\t\t\t\t\t<p style=\"font-size: 13px; font-style: italic ;\">\n\t\t\t\t\t\t* Bushaltestelle max. 600m bzw. Bahnhof max. 1200m Luftlinie entfernt und Werktags min.\n\t\t\t\t\t\t28 Abfahrten\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<!-- <section data-id=\"map05\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\t\tMach dir dein eigenes Bild der Nutzung des ÖPNV’s in den Bundesländern und erkunde die\n\t\t\t\t\t\tDeutschlandkarte:\n\t\t\t\t\t</p>\n\t\t\t\t\t {#if geojson}\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<select bind:value={selected} on:change={() => fitById(selected)}>\n\t\t\t\t\t\t\t\t<option value={null}>Select one</option>\n\t\t\t\t\t\t\t\t{#each geojson.features as place}\n\t\t\t\t\t\t\t\t\t<option value={place.properties.AREACD}>\n\t\t\t\t\t\t\t\t\t\t{place.properties.AREANM}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if} \n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSieht man vom Luftverkehr ab, verursachen Autos und Motorräder 2017 die höchsten\n\t\t\t\t\t\tCO2-Emissionen je Personenkilometer: Sie verbrauchen sogar 2,5-mal so viel wie der ÖPNV\n\t\t\t\t\t\tund 20-mal so viel wie Fahrräder.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAus diesem Grund entscheiden sich besonders auf Kurzstrecken viele für das Fahrrad. Doch\n\t\t\t\t\t\tdie größten Städte Deutschlands schneiden, wenn es um die Fahrradfreundlichkeit geht,\n\t\t\t\t\t\tnicht besonders gut ab…\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"map02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\t\tErkunde die Karte, indem du deine Maus über die einzelnen Städte bewegst.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section> -->\n\t\t</div>\n\t</Scroller>\n\n\t<Spacer size={spacings['xxxxl-96']} />\n{/if}\n<!--  <Section>\n\t<div class=\"erklaerungs-texte\">\n\t\t<p>\n\t\t\tQuelle: Unternehmen, Beförderte Personen, Personenkilometer (Personenverkehr mit Bussen und\n\t\t\tBahnen): Bundesländer, Quartale, Verkehrsart, DESTATIS Statistisches Bundesamt | Stand: 2023\n\t\t\tQuelle: Bevölkerung: Bundesländer, Stichtag 31.12.2020, DESTATIS Statistisches Bundesamt |\n\t\t\tStand: 2023 Werte für: 2020\n\t\t</p>\n\t</div>\n</Section> -->\n\n<Spacer size={spacings['xxxxl-96']} />\n\n<Section>\n\t<h3>Klimawirkung im Personenverkehr</h3>\n\t<br />\n\t<p>Angegeben sind die spezifischen Emissionen in Gramm CO2eq* je Personenkilometer.</p>\n\t<br />\n\t<p style=\"text-align: justify;\">\n\t\tAutos haben besonders hohe CO2*-Emissionen pro Personenkilometer. Sie verbrauchen 2,4-mal so\n\t\tviel wie der ÖPNV und 21-mal so viel wie Fahrräder in 2017.\n\t</p>\n\t<br />\n\t<p style=\"font-size: 14px; font-style: italic ;\">\n\t\t* CO2-Äquivalente, auch CO2e oder CO2eq sind eine Maßeinheit, um die Klimawirkung\n\t\tunterschiedlicher Treibhausgase zu vergleichen\n\t</p>\n</Section>\n\n{#if geoStates && usageData.data.region.indicators}\n\t<Scroller {threshold} bind:id={id['barChart']}>\n\t\t<div slot=\"background\">\n\t\t\t<figure>\n\t\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t\t<div class=\"chart\" style=\"width: 100%; height: 100%;\">\n\t\t\t\t\t\t{#if fineData}\n\t\t\t\t\t\t\t<Barcharts\n\t\t\t\t\t\t\t\tdata={fineDataFiltered}\n\t\t\t\t\t\t\t\txKey=\"amount\"\n\t\t\t\t\t\t\t\tyKey=\"category\"\n\t\t\t\t\t\t\t\txSuffix=\" €\"\n\t\t\t\t\t\t\t\ttitle=\"CO2 Emissionen\"\n\t\t\t\t\t\t\t\tsource=\"Quelle: Umweltfreundlich mobil! Ein ökologischer Verkehrsartenvergleich für den Personen- \n\t\t\t\t\t\t\t\t\t\tund Güterverkehr in Deutschland, Umweltbundesamt | Stand: 2021\"\n\t\t\t\t\t\t\t\txTicks=\"0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</figure>\n\t\t</div>\n\n\t\t<div slot=\"foreground\">\n\t\t\t<section data-id=\"barChart01\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\t\tDie Busßgelder für <strong style=\"color: {themes.bike.primary};\">Bikes</strong> sind ziemlich\n\t\t\t\t\t\thoch!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"barChart02\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\t\tThis chart shows the fines for <strong style=\"color: {themes.car.primary};\">Cars</strong\n\t\t\t\t\t\t>!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section data-id=\"barChart03\">\n\t\t\t\t<div class=\"col-medium\">\n\t\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\t\tThis chart shows the fines for <strong style=\"color: {themes.oepnv.primary};\"\n\t\t\t\t\t\t\t>Oepnv</strong\n\t\t\t\t\t\t>!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t</Scroller>\n{/if}\n\n<Footer />\n\n<style>\n\t/* Styles specific to elements within the demo */\n\t:global(svelte-scroller-foreground) {\n\t\tpointer-events: none !important;\n\t}\n\t:global(svelte-scroller-foreground section div) {\n\t\tpointer-events: all !important;\n\t}\n\n\t.chart {\n\t\theight: 100%;\n\t}\n\n\t.icon-heading {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tflex-shrink: 0;\n\t\tpadding: 0px;\n\t\tgap: 16px;\n\t\tmargin: 0 0 12px 0;\n\t}\n\n\t.icon-background {\n\t\tborder-radius: 8px;\n\t\tpadding: 6px;\n\t\twidth: 40px;\n\t\theight: 40px;\n\t}\n\n\t.erklaerungs-texte {\n\t\tfont-style: italic;\n\t\tfont-size: 13px;\n\t\thyphens: auto;\n\t}\n</style>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport * as d3 from 'd3';\n\timport { themes } from '../config.js';\n\timport { getColor, numberWithPoints } from '../utils.js';\n\n\texport let mapKey = 'Car';\n\texport let indicators;\n\n\tlet onmount = false;\n\tlet sortedIndicators = 0;\n\n    let min = 0;\n    let max = 1;\n\n\t$: if (mapKey && onmount) {\n\t\tdrawCanvas();\n\t}\n\n\tonMount(() => {\n\t\tonmount = true;\n\t});\n\n\tfunction drawCanvas() {\n\t\tconst canvas = document.getElementById('myCanvas');\n\t\tconst context = canvas.getContext('2d');\n\n\t\tsortedIndicators = [...indicators].sort((a, b) => a[mapKey] - b[mapKey]);\n\t\tmin = numberWithPoints(sortedIndicators[0][mapKey].toFixed(0));\n\t\tmax = numberWithPoints(sortedIndicators[sortedIndicators.length-1][mapKey].toFixed(0));\n\n\t\t// Create an interpolator between the two colors\n\t\tconst interpolate = getColor(0, 1, 'interpolate' + mapKey);\n\n\t\t// Get the width of the canvas\n\t\tconst width = canvas.width;\n\n\t\t// Loop over the width of the canvas\n\t\tfor (let i = 0; i < width; i++) {\n\t\t\t// Use the interpolator to get the color at each point\n\t\t\tconst color = interpolate(i / width);\n\n\t\t\t// Set the fill style and draw a rectangle\n\t\t\tcontext.fillStyle = color;\n\t\t\tcontext.fillRect(i, 0, 1, canvas.height);\n\t\t}\n\t}\n\n\n</script>\n\n<div class=\"legend\">\n\t<p style=\"color: {themes.neutral['text-dark'].secondary};\">{min}</p>\n\t<canvas id=\"myCanvas\" class=\"bar\"></canvas>\n\t<p style=\"color: {themes.neutral['text-dark'].secondary};\">{max}</p>\n</div>\n\n<style>\n\t.legend {\n\t\tposition: absolute;\n\t\tz-index: 20;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\ttop: auto;\n\t\tleft: auto;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tgap: 4px;\n\t\tpadding: 8px 16px;\n\t\tfont-size: small;\n\t}\n\t.bar {\n\t\twidth: clamp(2rem, 3vw, 3rem);\n\t\theight: 12px;\n\t\tborder-radius: 2px;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AA2HS,kCAAoC,CAC3C,MAAM,CAAE,CACT,CACA,iBAAI,CACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACT;ACjGS,uBAAyB,CACjC,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,UACnB;ACbA,oBAAM,CACL,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACxC,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IACT,CAEA,qBAAO,CACN,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,IAChB,CAEA,oBAAM,CACL,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAChB,CAEA,2BAAa,CACZ,SAAS,CAAE,KAAK,CAEhB,KAAK,CAAE,IACR;AC8KA,kBAAI,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GACT;ACrLA,kCAAO,CACN,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IACZ,CAEA,8BAAG,CACF,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CACT,CACA,8BAAG,CACF,YAAY,CAAE,IAAI,CAClB,OAAO,CAAE,YACV,CACA,qCAAU,CACT,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACT,CAEA,eAAC,CAAC,iBAAG,MAAO,CACX,MAAM,CAAE,OACT;ACgBA,qBAAO,CACN,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAC1B,CACA,wBAAU,CACT,UAAU,CAAE,UACb;ACmfA,iBAAI,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACT;AChbA,0BAAc,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IACT,CACQ,cAAgB,CACvB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACxC,OAAO,CAAE,GAAG,CACZ,eAAe,CAAE,KAAK,IAAI,CAC3B,CACQ,qBAAuB,CAC9B,QAAQ,CAAE,KAAK,CACf,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC1C,CACA,0BAAc,CACb,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,CAAC,CACZ,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAC7B,CACA,uBAAW,CACV,KAAK,CAAE,GACR;ACUA,mCAAsB,CACrB,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IACZ,CAEA,wCAA2B,CAC1B,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IACR,CAEA,wCAA2B,CAC1B,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CACV,CAEA,wCAA0B,OAAQ,CACjC,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IACR,CAEA,kDAAqC,CACpC,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,IAAI,CAIpB,WAAW,CAAE,SAId;AClMA,6BAAgB,CACf,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAClB;AC8lBQ,0BAA4B,CACnC,cAAc,CAAE,IAAI,CAAC,UACtB,CACQ,sCAAwC,CAC/C,cAAc,CAAE,GAAG,CAAC,UACrB,CAEA,qBAAO,CACN,MAAM,CAAE,IACT,CAEA,4BAAc,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,GAAG,CACZ,GAAG,CAAE,IAAI,CACT,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAClB,CAEA,+BAAiB,CAChB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACT,CAEA,iCAAmB,CAClB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IACV;ACvnBA,sBAAQ,CACP,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,GAAG,CAAE,GAAG,CACR,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,SAAS,CAAE,KACZ,CACA,mBAAK,CACJ,KAAK,CAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC7B,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAChB"
}